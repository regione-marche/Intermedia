<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0
                               http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">

    <camelContext managementNamePattern="#symbolicName#-#counter#" useMDCLogging="true"
                  xmlns="http://camel.apache.org/schema/blueprint" id="ctx.enti.bridge.pec.ca.scansiona.casella.passiva">

        <!-- *********** EXCEPTION CATCHER DECLARATION *********** -->
        <onException useOriginalMessage="true">
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPAFatalException</exception>
            <redeliveryPolicy maximumRedeliveries="0"/>

            <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

            <to uri="log:it.extrasys.marche.regione.fatturapa.salva.fatture.persistence?level=ERROR&amp;showAll=true&amp;multiline=true"/>
        </onException>

        <onException useOriginalMessage="true" >
            <exception>java.lang.Exception</exception>
            <redeliveryPolicy maximumRedeliveries="0"/>

            <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

            <to uri="log:it.extrasys.marche.regione.fatturapa.tracing.persistence?level=ERROR&amp;showAll=true&amp;multiline=true"/>
        </onException>

        <onException useOriginalMessage="true">
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPAEnteNonTrovatoException</exception>

            <handled>
                <constant>true</constant>
            </handled>

            <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

            <removeHeader headerName="exception"/>

            <to uri="log:it.extrasys.marche.regione.fatturapa.salva.fatture.persistence?level=ERROR&amp;showAll=true&amp;multiline=true"/>

            <setHeader headerName="esitoRisposta">
                <constant>enteNonTrovato</constant>
            </setHeader>

            <to uri="direct:enti.bridge.pec.ca.notifica.esito.inoltro.errore"/>
        </onException>

        <onException useOriginalMessage="true">
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPAFatturaNonTrovataException
            </exception>

            <handled>
                <constant>true</constant>
            </handled>
            <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

            <removeHeader headerName="exception"/>
            <to uri="log:it.extrasys.marche.regione.fatturapa.salva.fatture.persistence?level=ERROR&amp;showAll=true&amp;multiline=true"/>

            <setHeader headerName="esitoRisposta">
                <constant>fatturaNonTrovata</constant>
            </setHeader>

            <to uri="direct:enti.bridge.pec.ca.notifica.esito.inoltro.errore"/>
        </onException>


        <onException useOriginalMessage="true" redeliveryPolicyRef="pecCAAccettazioneRifiutoRedeliveryPolicyConfig">
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPaPersistenceException</exception>

            <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

            <to uri="log:it.extrasys.marche.regione.fatturapa.tracing.persistence?level=ERROR&amp;showAll=true&amp;multiline=true"/>

        </onException>

        <route id="enti.bridge.pec.ca.notifica.esito.committente">

            <!-- from che funziona con il server emarche -->
            <!-- from uri="imaps://{{ente.pec.ca.indirizzo.email.username.intero}}@{{ente.pec.ca.indirizzo.email.host.imaps}}?password={{ente.pec.ca.indirizzo.email.password}}&amp;username={{ente.pec.ca.indirizzo.email.username.intero}}&amp;port={{ente.pec.ca.indirizzo.email.port.imaps}}&amp;consumer.initialDelay=10000&amp;sslContextParameters=#sslContextParameters"/-->
            <from uri="imaps://{{ente.pec.ca.indirizzo.email.username.intero}}@{{ente.pec.ca.indirizzo.email.host.imaps}}?password={{ente.pec.ca.indirizzo.email.password}}&amp;username={{ente.pec.ca.indirizzo.email.username.intero}}&amp;port={{ente.pec.ca.indirizzo.email.port.imaps}}&amp;consumer.initialDelay=10000"/>

            <log message="PEC CA: ENTI BRIDGE PEC CA SCANSIONA CASELLA STARTED subject: [${header.subject}]"/>

            <setHeader headerName="canaleAvanzato">
                <constant>true</constant>
            </setHeader>

            <!-- nell'allegato deve esserci la notifica id accettazione/rifiuto -->
            <process ref="pecCAScansioneCasellaCheckSubject"/>

            <choice>
                <when>
                    <simple>
                        ${in.header.tipoSubject} == 'accettazioneFattura' or ${in.header.tipoSubject} == 'consegnaFattura' or
                        ${in.header.tipoSubject} == 'accettazioneDecorrenza' or ${in.header.tipoSubject} == 'consegnaDecorrenza' or
                        ${in.header.tipoSubject} == 'accettazioneEC' or ${in.header.tipoSubject} == 'consegnaEC' or
                        ${in.header.tipoSubject} == 'accettazioneScartoEC' or ${in.header.tipoSubject} == 'consegnaScartoEC'
                    </simple>

                    <to uri="{{enti.bridge.pec.ca.notifica.accettazione.consegna}}"/>
                </when>
                <when>
                    <simple>${in.header.tipoSubject} == 'notificaMancataConsegnaNonAccettazione'</simple>

                    <log message="PEC CA: ENTI BRIDGE PEC CA SCANSIONA CASELLA, RICEVUTA NOTIFICA NON ACCETTAZIONE O MANCATA CONSEGNA: inserisco in coda di notifica" loggingLevel="ERROR"/>

                    <log message="***************** BODY: [${body}]" loggingLevel="DEBUG"/>

                    <convertBodyTo type="java.lang.String"/>

                    <!-- in caso di messaggio di notifica di non accettazione o di mancata consegna metto il messaggio in una coda apposita -->
                    <inOnly uri="{{pec.ca.notifica.non.accettazione.mancata.consegna.queue}}"/>
                </when>
                <otherwise>
                    <!-- Invio il messaggio al modulo di notifica esito committente per accettazione/rifiuto -->
                    <to uri="{{enti.bridge.pec.ca.notifica.esito.committente}}"/>
                </otherwise>
            </choice>

            <log message="PEC CA: ENTI BRIDGE PEC CA SCANSIONA CASELLA END"/>

            <log message="PEC CA: ENTI BRIDGE PEC CA SCANSIONA CASELLA END ***************** BODY: [${body}]" loggingLevel="DEBUG"/>

        </route>

        <route id="enti.bridge.pec.ca.notifica.accettazione.consegna">

            <from uri="{{enti.bridge.pec.ca.notifica.accettazione.consegna}}"/>

            <log message="PEC CA: ENTI BRIDGE PEC CA NOTIFICA ACCETTAZIONE/CONSEGNA STARTED"/>

            <process ref="pecCAAggiornaStatoAccettataConsegnataPassivaProcessor"/>

        </route>

    </camelContext>
</blueprint>