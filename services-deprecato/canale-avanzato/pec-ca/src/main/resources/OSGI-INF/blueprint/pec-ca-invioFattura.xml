<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0
                               http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">

    <camelContext managementNamePattern="#symbolicName#-#counter#" useMDCLogging="true"
                  xmlns="http://camel.apache.org/schema/blueprint" id="ctx.enti.bridge.pec.ca.fattura">

    <!-- *********** EXCEPTION CATCHER DECLARATION *********** -->
        <onException useOriginalMessage="true">
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPAFatalException</exception>
            <redeliveryPolicy maximumRedeliveries="0"/>           <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

            <to uri="log:it.extrasys.marche.regione.fatturapa.salva.fatture.persistence?level=ERROR&amp;showAll=true&amp;multiline=true"/>
        </onException>

        <onException useOriginalMessage="true" >
            <exception>java.lang.Exception</exception>
            <redeliveryPolicy maximumRedeliveries="0"/>
            <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

            <to uri="log:it.extrasys.marche.regione.fatturapa.tracing.persistence?level=ERROR&amp;showAll=true&amp;multiline=true"/>
        </onException>

        <onException useOriginalMessage="true">
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPAEnteNonTrovatoException</exception>
            <redeliveryPolicy maximumRedeliveries="0"/>
            <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

            <to uri="log:it.extrasys.marche.regione.fatturapa.salva.fatture.persistence?level=ERROR&amp;showAll=true&amp;multiline=true"/>
        </onException>

        <onException useOriginalMessage="true" redeliveryPolicyRef="pecCAInvioFatturaRedeliveryPolicyConfig">
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPaPersistenceException</exception>

            <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

            <to uri="log:it.extrasys.marche.regione.fatturapa.tracing.persistence?level=ERROR&amp;showAll=true&amp;multiline=true"/>
        </onException>

        <route id="enti.bridge.pec.ca.protocollo.invio.fattura">
            <from uri="{{enti.bridge.ente.pec.ca.protocollo.invio.queue}}?selector=tipoMessaggio='FatturaElettronica'"/>

            <log message="PEC CA: ENTI BRIDGE PEC CA PROTOCOLLO INVIO FATTURA STARTED - IDENTIFICATIVO SDI: ${headers.identificativoSdI}"/>

            <to uri="direct:invioFatturaCommon"/>

            <choice>
                <when>
                    <simple>${headers.infoTipoInvioFatturaCA} == 'Protocollazione'</simple>

                    <toD uri="${headers.codaGestionaleCAIn}"/>

                </when>
            </choice>

            <log message="PEC CA: ENTI BRIDGE PEC CA PROTOCOLLO INVIO FATTURA END - IDENTIFICATIVO SDI: ${headers.identificativoSdI}"/>

        </route>

        <route id="enti.bridge.pec.ca.registrazione.invio.fattura">
            <from uri="{{enti.bridge.ente.pec.ca.registrazione.invio.queue}}?selector=tipoMessaggio='FatturaElettronica'"/>

            <log message="PEC CA: ENTI BRIDGE PEC CA REGISTRAZIONE INVIO FATTURA STARTED - IDENTIFICATIVO SDI: ${headers.identificativoSdI}"/>

            <setHeader headerName="infoTipoInvioFatturaCA">
                <constant>Registrazione</constant>
            </setHeader>

            <to uri="direct:invioFatturaCommon"/>

            <log message="PEC CA: ENTI BRIDGE PEC CA REGISTRAZIONE INVIO FATTURA END - IDENTIFICATIVO SDI: ${headers.identificativoSdI}"/>

        </route>

        <route id="enti.bridge.pec.ca.invio.fattura.common">
            <from uri="direct:invioFatturaCommon"/>

            <setHeader headerName="tipoMessaggio">
                <simple>FatturaElettronica</simple>
            </setHeader>

            <bean ref="pecCAManager" method="preparaMessaggio"/>

            <log message="PEC CA: ENTI BRIDGE PEC CA INVIO FATTURA COMMON - TIPO INVIO ${headers.infoTipoInvioFatturaCA}"/>

            <choice>
                <when>
                    <simple>${headers.infoTipoInvioFatturaCA} == 'Registrazione'</simple>
                        <setHeader headerName="to">
                            <simple>${headers.endpointGestionale}</simple>
                        </setHeader>
                </when>
                <otherwise>
                    <setHeader headerName="to">
                        <simple>${headers.endpointProtocollo}</simple>
                    </setHeader>
                </otherwise>
            </choice>

            <setHeader headerName="from">
                <simple>{{ente.pec.ca.indirizzo.email.username.intero}}</simple>
            </setHeader>

            <process ref="pecCAFatturaPassivaCreaSubjectProcessor"/>

            <enrich strategyRef="pecCAPreparazioneInvioStrategy">
                <simple>{{enti.bridge.ente.pec.ca.preparazione.invio.enricher}}</simple>
            </enrich>

            <inOnly uri="{{aggiorna.stato.fattura.ca.queue}}"/>

        </route>


        <route id="preparazioneInvioMessaggioPecCA">
            <from uri="direct:preparazioneInvioMessaggioPecCA"/>

            <choice>
                <when>
                    <!-- controllo la versione della fattura per scegliere il tipo di xslt da utilizzare -->
                    <xpath resultType="java.lang.String">count(//*[local-name()='FatturaElettronica']/@versione) >=1</xpath>

                    <setHeader headerName="versioneFattura">
                        <xpath resultType="java.lang.String">//*[local-name()='FatturaElettronica']/@versione</xpath>
                    </setHeader>

                    <!-- Ripulisco xml da caratteri strani non UTF-8 -->
                    <to uri="xslt:xsl/cleaner_xml.xsl"/>

                    <choice>
                        <when>
                            <simple>${header.versioneFattura} == 'FPA12'</simple>

                            <log message="PEC CA: ENTI BRIDGE PEC CA INVIO FATTURA versione fatturapa 1.2.1" loggingLevel="INFO"/>

                            <to uri="xslt:xsl/{{ente.bridge.pec.ca.template.fattura.versione.1.2.1}}"/>
                        </when>
                        <when>
                            <simple>${header.versioneFattura} == '1.1'</simple>

                            <log message="PEC CA: ENTI BRIDGE PEC CA INVIO FATTURA versione fatturapa 1.1" loggingLevel="INFO"/>

                            <to uri="xslt:xsl/{{ente.bridge.pec.ca.template.fattura.versione.1.1}}"/>
                        </when>
                        <otherwise>
                            <log message="PEC CA: ENTI BRIDGE PEC CA INVIO FATTURA versione fatturapa non trovata" loggingLevel="WARN"/>
                            <to uri="xslt:xsl/{{ente.bridge.pec.ca.template.fattura.versione.default}}"/>
                        </otherwise>
                    </choice>
                </when>
                <otherwise>
                    <log message="PEC CA: ENTI BRIDGE PEC CA INVIO FATTURA versione fatturapa non trovata" loggingLevel="WARN"/>
                    <to uri="xslt:xsl/{{ente.bridge.pec.ca.template.fattura.versione.default}}"/>
                </otherwise>

            </choice>

            <setHeader headerName="content-type">
                <constant>text/html</constant>
            </setHeader>

            <removeHeader headerName="SOAP-ACTION"/>

            <to uri="smtps://{{ente.pec.ca.indirizzo.email.username.intero}}@{{ente.pec.ca.indirizzo.email.host}}?password={{ente.pec.ca.indirizzo.email.password}}&amp;username={{ente.pec.ca.indirizzo.email.username.intero}}&amp;port={{ente.pec.ca.indirizzo.email.port.smtps}}&amp;headerFilterStrategy=#FatturaHeadersMailFilterStrategy"/>

        </route>

        <route id="aggiornaFattura">
            <from uri="{{aggiorna.stato.fattura.ca.queue}}"/>

            <log message="PEC CA: ENTI BRIDGE PEC CA PROTOCOLLO INVIO FATTURA AGGIORNAMENTO FATTURA - IDENTIFICATIVO SDI: ${headers.identificativoSdI}"/>

            <!-- devo aggiornare lo stato della fattura e anche il progressivo d'invio -->
            <bean ref="pecCAManager" method="aggiornaFattura"/>

            <log message="PEC CA: ENTI BRIDGE PEC CA INVIO FATTURA: FATTURA AGGIORNATA - IDENTIFICATIVO SDI: ${headers.identificativoSdI}"/>
        </route>

    </camelContext>
</blueprint>