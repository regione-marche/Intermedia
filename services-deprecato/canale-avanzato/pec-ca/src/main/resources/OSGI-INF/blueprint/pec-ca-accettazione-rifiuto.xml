<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0
                               http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">

    <camelContext managementNamePattern="#symbolicName#-#counter#" useMDCLogging="true"
                      xmlns="http://camel.apache.org/schema/blueprint" id="ctx.enti.bridge.pec.ca.notifica.esito.committente">

    <!-- *********** EXCEPTION CATCHER DECLARATION *********** -->

        <onException useOriginalMessage="true">
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPAFatalException</exception>
            <redeliveryPolicy maximumRedeliveries="0"/>
            <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

            <to uri="log:it.extrasys.marche.regione.fatturapa.salva.fatture.persistence?level=ERROR&amp;showAll=true&amp;multiline=true"/>
        </onException>

        <onException useOriginalMessage="true">
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPAFatturaNonTrovataException</exception>

            <handled>
                <constant>true</constant>
            </handled>

            <to uri="log:it.extrasys.marche.regione.fatturapa.salva.fatture?level=ERROR&amp;showAll=true&amp;multiline=true"/>

            <setHeader headerName="esitoRisposta">
                <constant>fatturaNonTrovata</constant>
            </setHeader>

            <setHeader headerName="codiceEsito">
                <simple>EN02</simple>
            </setHeader>
            <setHeader headerName="descrizioneEsito">
                <simple>notifica rifiutata: fattura inesistente</simple>
            </setHeader>

            <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

            <removeHeader headerName="exception"/>

            <setBody>
                <simple resultType="java.lang.String">null</simple>
            </setBody>

            <to uri="direct:enti.bridge.pec.ca.notifica.esito.inoltro.errore"/>
        </onException>

        <onException useOriginalMessage="true">
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPANomeFileErratoException</exception>

            <handled>
                <constant>true</constant>
            </handled>

            <to uri="log:it.extrasys.marche.regione.fatturapa.salva.fatture.persistence?level=ERROR&amp;showAll=true&amp;multiline=true"/>

            <setHeader headerName="esitoRisposta">
                <constant>nomeFileErrato</constant>
            </setHeader>

            <setHeader headerName="codiceEsito">
                <simple>EN05</simple>
            </setHeader>
            <setHeader headerName="descrizioneEsito">
                <simple>notifica rifiutata: nome file non valido</simple>
            </setHeader>

            <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

            <removeHeader headerName="exception"/>

            <setBody>
                <simple resultType="java.lang.String">null</simple>
            </setBody>

            <to uri="direct:enti.bridge.pec.ca.notifica.esito.inoltro.errore"/>
        </onException>

        <onException useOriginalMessage="true">
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPAEnteNonTrovatoException</exception>

            <handled>
                <constant>true</constant>
            </handled>

            <to uri="log:it.extrasys.marche.regione.fatturapa.salva.fatture.persistence?level=ERROR&amp;showAll=true&amp;multiline=true"/>

            <setHeader headerName="esitoRisposta">
                <constant>enteNonTrovato</constant>
            </setHeader>

            <setHeader headerName="codiceEsito">
                <simple>EN06</simple>
            </setHeader>
            <setHeader headerName="descrizioneEsito">
                <simple>ente non abiliato a IntermediaMarche</simple>
            </setHeader>

            <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

            <removeHeader headerName="excception"/>

            <setBody>
                <simple resultType="java.lang.String">null</simple>
            </setBody>

            <to uri="direct:enti.bridge.pec.ca.notifica.esito.inoltro.errore"/>
        </onException>

        <onException useOriginalMessage="true">
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPAAllegatoNotificaEsitoCommNonTrovatoException</exception>

            <handled>
                <constant>true</constant>
            </handled>

            <setHeader headerName="esitoRisposta">
                <simple>allegatoNonTrovato</simple>
            </setHeader>

            <setHeader headerName="codiceEsito">
                <simple>EN07</simple>
            </setHeader>
            <setHeader headerName="descrizioneEsito">
                <simple>notifica rifiutata: allegato non trovato</simple>
            </setHeader>

            <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

            <removeHeader headerName="exception"/>

            <log message="FatturaPAAllegatoAttivaNonTrovatoException"/>
            <to uri="log:it.extrasys.marche.regione.fatturapa.tracing?level=ERROR&amp;showAll=true&amp;multiline=true"/>

            <setBody>
                <simple resultType="java.lang.String">null</simple>
            </setBody>

            <to uri="direct:enti.bridge.pec.ca.notifica.esito.inoltro.errore"/>

        </onException>

        <onException>
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPAValidazioneFallitaException</exception>

            <handled>
                <constant>true</constant>
            </handled>

            <setHeader headerName="esitoRisposta">
                <simple>validazioneFallita</simple>
            </setHeader>

            <setHeader headerName="codiceEsito">
                <constant>EN08</constant>
            </setHeader>
            <setHeader headerName="descrizioneEsito">
                <constant>FILE NOTIFICA RIFIUTATO: ERRORE VALIDAZIONE NOTIFICA</constant>
            </setHeader>

            <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

            <removeHeader headerName="exception"/>

            <log message="FatturaPAValidazioneFallitaException"/>
            <to uri="log:it.extrasys.marche.regione.fatturapa.tracing?level=ERROR&amp;showAll=true&amp;multiline=true"/>

            <setBody>
                <simple resultType="java.lang.String">null</simple>
            </setBody>

            <to uri="direct:enti.bridge.pec.ca.notifica.esito.inoltro.errore"/>
        </onException>

        <onException useOriginalMessage="true" redeliveryPolicyRef="pecCAAccettazioneRifiutoRedeliveryPolicyConfig">
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPaPersistenceException</exception>

            <handled>
                <constant>true</constant>
            </handled>

            <to uri="log:it.extrasys.marche.regione.fatturapa.tracing.persistence?level=ERROR&amp;showAll=true&amp;multiline=true"/>

            <setHeader headerName="esitoRisposta">
                <constant>persistenceError</constant>
            </setHeader>

            <setHeader headerName="codiceEsito">
                <simple>EN99</simple>
            </setHeader>
            <setHeader headerName="descrizioneEsito">
                <simple>errore generico</simple>
            </setHeader>

            <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

            <removeHeader headerName="exception"/>

            <setBody>
                <simple resultType="java.lang.String">null</simple>
            </setBody>

            <to uri="direct:enti.bridge.pec.ca.notifica.esito.inoltro.errore"/>

        </onException>

        <onException useOriginalMessage="true">
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPAException</exception>
            <exception>java.lang.Exception</exception>

            <handled>
                <constant>true</constant>
            </handled>

            <setHeader headerName="esitoRisposta">
                <simple>erroreGenerico</simple>
            </setHeader>

            <setHeader headerName="codiceEsito">
                <simple>EN99</simple>
            </setHeader>
            <setHeader headerName="descrizioneEsito">
                <simple>Errore generico</simple>
            </setHeader>

            <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

            <removeHeader headerName="exception"/>

            <log message="FatturaPAException"/>
            <to uri="log:it.extrasys.marche.regione.fatturapa.tracing?level=ERROR&amp;showAll=true&amp;multiline=true"/>

            <setBody>
                <simple resultType="java.lang.String">null</simple>
            </setBody>

            <to uri="direct:enti.bridge.pec.ca.notifica.esito.inoltro.errore"/>

        </onException>

        <route id="enti.bridge.pec.ca.notifica.esito.committente">
            <from uri="{{enti.bridge.pec.ca.notifica.esito.committente}}"/>

            <log message="PEC CA: ENTI BRIDGE PEC CA ACCETTAZIONE/RIFIUTO STARTED"/>

            <setHeader headerName="oldSubject">
                <simple>${in.header.subject}</simple>
            </setHeader>

            <!-- nell'allegato deve esserci la notifica id accettazione/rifiuto -->
            <bean ref="pecCANotificaEsitoCommittente" method="estraiMessaggioAccettazioneRifiuto"/>

            <log message="PEC CA: ENTI BRIDGE PEC CA ACCETTAZIONE/RIFIUTO STARTED - IDENTIFICATIVO SDI: ${headers.identificativoSdI}"/>

            <choice>
                <when>
                    <simple>${in.header.emailDaIgnorare} == true</simple>
                    <log message="ENTI BRIDGE PEC CA ACCETTAZIONE/RIFIUTO MAIL DA IGNORARE: mittente: ${in.header.Return-Path}"/>
                    
                </when>
                <otherwise>

                    <log message="PEC CA: ENTI BRIDGE PEC CA ACCETTAZIONE/RIFIUTO - VALIDAZIONE START"/>

                    <!-- Validazione File -->

                    <enrich strategyRef="pecEsitoCommittenteValidationAggregationStrategy" id="idPecEsitoCommittenteValidation">
                        <simple>{{enti.bridge.pec.ca.notifica.esito.committente.validation.enricher}}</simple>
                    </enrich>

                    <log message="PEC CA: ENTI BRIDGE PEC CA ACCETTAZIONE/RIFIUTO - VALIDAZIONE END"/>

                    <choice>
                        <when>
                            <simple>${headers.validation} == 'OK'</simple>

                            <log message="PEC CA: ESITO FATTURA VALIDAZIONE OK"/>

                            <inOnly uri="{{enti.bridge.pec.ca.notifica.esito.committente.inoltro}}"/>

                            <setHeader headerName="tipoOperazione">
                                <constant>ricezioneNotifica</constant>
                            </setHeader>

                            <to uri="{{aggiorna.stato.notifica.ca.queue}}"/>
                            <to uri="direct:enti.bridge.pec.ca.salva.notifica.accettazione.rifiuto"/>

                            <inOnly uri="{{enti.bridge.pec.ca.notifica.esito.committente.esito.operazione.inoltro}}"/>

                        </when>
                        <otherwise>
                            <log message="PEC CA: ESITO FATTURA VALIDAZIONE KO"/>

                            <throwException ref="fatturaPAValidazioneFallitaException"/>
                        </otherwise>
                    </choice>
                </otherwise>
                
            </choice>

            <log message="PEC CA: END ACCETTAZIONE/RIFIUTO - IDENTIFICATIVO SDI: ${headers.identificativoSdI}"/>

        </route>

        <!-- *********** VALIDATION ENRICHER *********** -->

        <route id="enti.bridge.pec.ca.notifica.esito.committente.validation.enricher">
            <from uri="{{enti.bridge.pec.ca.notifica.esito.committente.validation.enricher}}"/>

            <doTry>

                <process ref="pecValidazioneEsitoCommittenteProcessor"/>

                <to uri="validator:xsd/MessaggiTypes_v1.1.xsd"/>

                <setHeader headerName="validation">
                    <constant>OK</constant>
                </setHeader>

                <doCatch>
                    <exception>org.apache.camel.ValidationException</exception>
                    <exception>org.xml.sax.SAXParseException</exception>

                    <handled>
                        <constant>true</constant>
                    </handled>

                    <setHeader headerName="validation">
                        <constant>KO</constant>
                    </setHeader>
                </doCatch>
            </doTry>
        </route>

        <!-- *********** VALIDATION ENRICHER *********** -->

        <route id="enti.bridge.pec.ca.notifica.esito.committente.esito.operazione.inoltro">
            <from uri="{{enti.bridge.pec.ca.notifica.esito.committente.esito.operazione.inoltro}}"/>

            <!-- costruire il file esito operazione -->
            <enrich strategyRef="pecCAEsitoOperazioneEsitoCommittenteAggregationStrategy">
                <simple>{{enti.bridge.pec.ca.notifica.esito.committente.esito.operazione.enricher}}</simple>
            </enrich>

            <to uri="velocity:velocity/creaBodyEsitoOperazioneEsitoCommTemplate.vm"/>

            <bean ref="pecCANotificaEsitoCommittente" method="preparaMailEsitoOperazione"/>

            <setHeader headerName="to">
                <simple>${in.headers.Return-Path}</simple>
            </setHeader>

            <setHeader headerName="from">
                <simple>{{ente.pec.ca.indirizzo.email.username.intero}}</simple>
            </setHeader>

            <setHeader headerName="content-type">
                <constant>text/html</constant>
            </setHeader>

            <log message="ENTI BRIDGE PEC CA NOTIFICA ESITO COMMITTENTE INBOUND: INVIO EMAIL ESITO OPERAZIONE"/>

            <removeHeader headerName="SOAP-ACTION"/>

            <to uri="smtps://{{ente.pec.ca.indirizzo.email.username.intero}}@{{ente.pec.ca.indirizzo.email.host}}?password={{ente.pec.ca.indirizzo.email.password}}&amp;username={{ente.pec.ca.indirizzo.email.username.intero}}&amp;port={{ente.pec.ca.indirizzo.email.port.smtps}}&amp;headerFilterStrategy=#FatturaHeadersMailFilterStrategy"/>

            <choice>
                <when>
                    <simple>${headers.esitoRisposta} == null</simple>
                    <log message="ENTI BRIDGE PEC CA NOTIFICA ESITO COMMITTENTE INBOUND: INVIO EMAIL ESITO OPERAZIONE - OK"/>
                </when>
                <when>
                    <simple>${headers.esitoRisposta} == ''</simple>
                    <log message="ENTI BRIDGE PEC CA NOTIFICA ESITO COMMITTENTE INBOUND: INVIO EMAIL ESITO OPERAZIONE - OK"/>
                </when>
                <otherwise>
                    <log message="ENTI BRIDGE PEC CA NOTIFICA ESITO COMMITTENTE INBOUND: INVIO EMAIL ESITO OPERAZIONE - TIPO ERRORE: ${headers.esitoRisposta}"/>
                </otherwise>
            </choice>

        </route>

        <route id="enti.bridge.pec.ca.notifica.esito.committente.esito.operazione.enricher">
            <from uri="{{enti.bridge.pec.ca.notifica.esito.committente.esito.operazione.enricher}}"/>

            <bean ref="pecCANotificaEsitoCommittente" method="setHeadersEsitoOperazione"/>

            <log message="ENTI BRIDGE PEC CA NOTIFICA ESITO COMMITTENTE ESITO OPERAZIONE ENRICHER"/>

            <to uri="velocity:velocity/creaFileEsitoOperazioneEsitoCommTemplate.vm"/>

        </route>

 <!--
 ToDo: Attenzione verificare il perchè manca quasta rotta! (Era commentata) Per la coda enti.bridge.pec.ca.notifica.esito.inoltro.errore non c'è nessun consumatore FARE DEI TEST
 -->
        <route id="enti.bridge.pec.ca.notifica.esito.committente.inoltro.errore">
            <from uri="{{enti.bridge.pec.ca.notifica.esito.inoltro.errore}}"/>
            <to uri="direct:enti.bridge.pec.ca.notifica.esito.inoltro.errore"/>
        </route>


        <route id="enti.bridge.pec.ca.notifica.esito.inoltro.errore">
            <from uri="direct:enti.bridge.pec.ca.notifica.esito.inoltro.errore"/>

            <log message="ENTI BRIDGE PEC CA NOTIFICA ESITO COMMITTENTE INOLTRO ERRORI STARTED"/>

            <bean ref="pecCANotificaEsitoCommittente" method="setHeadersEsitoOperazioneErrore"/>

            <setBody>
                <simple resultType="java.lang.String">null</simple>
            </setBody>

            <inOnly uri="{{enti.bridge.pec.ca.notifica.esito.committente.esito.operazione.inoltro}}"/>

        </route>

        <route id="aggiornaFattura">
            <from uri="{{aggiorna.stato.notifica.ca.queue}}"/>

            <log message="PEC CA: ENTI BRIDGE PEC CA RICEVUTA NOTIFICA ESITO AGGIORNAMENTO FATTURA - IDENTIFICATIVO SDI: ${headers.identificativoSdI}"
                 loggingLevel="INFO"/>

            <bean ref="pecCANotificaEsitoCommittente" method="aggiornaFattura"/>

            <log message="PEC CA: ENTI BRIDGE PEC CA RICEVUTA NOTIFICA ESITO: FATTURA AGGIORNATA" loggingLevel="INFO"/>
        </route>

        <route id="salvaNotificaAccettazioneRifiuto">
            <from uri="direct:enti.bridge.pec.ca.salva.notifica.accettazione.rifiuto"/>

            <log message="PEC CA: ENTI BRIDGE PEC CA SALVA NOTIFICA ESITO DB - IDENTIFICATIVO SDI: ${headers.identificativoSdI}"
                 loggingLevel="INFO"/>

            <bean ref="pecCANotificaEsitoCommittente" method="salvaNotificaAccettazioneRifiuto"/>

            <log message="PEC CA: ENTI BRIDGE PEC CA SALVA NOTIFICA ESITO: NOTIFICA SALVATA" loggingLevel="INFO"/>
        </route>

        <!-- Protocollazione Notifica Esito Committente -->
        <route id="enti.bridge.pec.ca.protocollo.invio.notifica.esito.committente.esito">
            <from uri="{{enti.bridge.ente.pec.ca.protocollo.invio.queue}}?selector=tipoMessaggio='NotificaEsitoCommittente'"/>

            <log message="ENTI BRIDGE PEC CA PROTOCOLLAZIONE INVIO NOTIFICA ESITO COMMITTENTE STARTED"/>

            <setHeader headerName="tipoMessaggio">
                <simple>NotificaEsitoCommittente</simple>
            </setHeader>

            <log message="PEC CA: ENTI BRIDGE PEC CA PROTOCOLLO INVIO NOTIFICA ESITO COMMITTENTE - TIPO INVIO ${headers.infoTipoInvioFatturaCA}"/>

            <choice>
                <when>
                    <simple>${headers.infoTipoInvioFatturaCA} == 'Protocollazione'</simple>

                    <to uri="direct:protocolloInvioCommon"/>

                </when>
                <otherwise>
                    <log message="PEC CA: ENTI BRIDGE PEC CA PROTOCOLLO INVIO NOTIFICA ESITO COMMITTENTE - INVIO UNICO - LA NOTIFICA EC NON VIENE INVIATA"/>
                </otherwise>
            </choice>

            <log message="PEC CA: ENTI BRIDGE PEC CA PROTOCOLLO INVIO NOTIFICA ESITO COMMITTENTE END - IDENTIFICATIVO SDI: ${headers.identificativoSdI}"/>
        </route>

        <!-- Protocollazione Scarto Notifica Esito -->
        <route id="enti.bridge.pec.ca.protocollo.invio.scarto.notifica.esito.committente.esito">
            <from uri="{{enti.bridge.ente.pec.ca.protocollo.invio.queue}}?selector=tipoMessaggio='NotificaScartoEsito'"/>

            <log message="ENTI BRIDGE PEC CA PROTOCOLLAZIONE INVIO SCARTO NOTIFICA ESITO COMMITTENTE STARTED"/>

            <setHeader headerName="tipoMessaggio">
                <simple>NotificaScartoEsito</simple>
            </setHeader>

            <log message="PEC CA: ENTI BRIDGE PEC CA PROTOCOLLO INVIO SCARTO NOTIFICA ESITO COMMITTENTE - TIPO INVIO ${headers.infoTipoInvioFatturaCA}"/>

            <to uri="direct:protocolloInvioCommon"/>

            <log message="PEC CA: ENTI BRIDGE PEC CA PROTOCOLLO INVIO SCARTO NOTIFICA ESITO COMMITTENTE END - IDENTIFICATIVO SDI: ${headers.identificativoSdI}"/>
        </route>

        <!-- Registrazione Scarto Notifica Esito -->
        <route id="enti.bridge.pec.ca.registrazione.invio.scarto.notifica.esito.committente">
            <from uri="{{enti.bridge.ente.pec.ca.registrazione.invio.queue}}?selector=tipoMessaggio='NotificaScartoEsito'"/>

            <log message="ENTI BRIDGE PEC CA REGISTRAZIONE INVIO SCARTO NOTIFICA ESITO COMMITTENTE STARTED"/>

            <setHeader headerName="tipoMessaggio">
                <simple>NotificaScartoEsito</simple>
            </setHeader>

            <log message="PEC CA: ENTI BRIDGE PEC CA REGISTRAZIONE INVIO SCARTO NOTIFICA ESITO COMMITTENTE - TIPO INVIO ${headers.infoTipoInvioFatturaCA}"/>

            <to uri="direct:registrazioneInvioCommon"/>

            <log message="PEC CA: ENTI BRIDGE PEC CA REGISTRAZIONE INVIO SCARTO NOTIFICA ESITO COMMITTENTE END - IDENTIFICATIVO SDI: ${headers.identificativoSdI}"/>
        </route>

        <!-- Registrazione Notifica Esito Committente-->
        <!--
        <route id="enti.bridge.pec.ca.registrazione.invio.notifica.esito.committente">
            <from uri="{{enti.bridge.ente.pec.ca.registrazione.invio.queue}}?selector=tipoMessaggio='NotificaEsitoCommittente'"/>

            <log message="ENTI BRIDGE PEC CA REGISTRAZIONE INVIO NOTIFICA ESITO COMMITTENTE STARTED"/>

            <setHeader headerName="tipoMessaggio">
                <simple>NotificaEsitoCommittente</simple>
            </setHeader>

            <log message="PEC CA: ENTI BRIDGE PEC CA REGISTRAZIONE INVIO NOTIFICA ESITO COMMITTENTE - TIPO INVIO ${headers.infoTipoInvioFatturaCA}"/>

            <to uri="direct:registrazioneInvioCommon"/>

            <log message="PEC CA: ENTI BRIDGE PEC CA REGISTRAZIONE INVIO NOTIFICA ESITO COMMITTENTE END - IDENTIFICATIVO SDI: ${headers.identificativoSdI}"/>
        </route>
        -->

        <route id="enti.bridge.pec.ca.protocollo.invio.common">
            <from uri="direct:protocolloInvioCommon"/>

            <removeHeader headerName="to"/>
            <removeHeader headerName="To"/>
            <removeHeader headerName="From"/>
            <removeHeader headerName="from"/>
            <removeHeader headerName="subject"/>
            <removeHeader headerName="Subject"/>

            <setHeader headerName="to">
                <simple>${headers.endpointProtocollo}</simple>
            </setHeader>

            <setHeader headerName="from">
                <simple>{{ente.pec.ca.indirizzo.email.username.intero}}</simple>
            </setHeader>

            <enrich strategyRef="pecCAPreparazioneInvioStrategy">
                <simple>{{enti.bridge.ente.pec.ca.preparazione.invio.enricher}}</simple>
            </enrich>

            <setHeader headerName="tipoOperazione">
                <constant>protocollazioneNotifica</constant>
            </setHeader>

            <inOnly uri="{{aggiorna.stato.notifica.ca.queue}}"/>
            <inOnly uri="direct:enti.bridge.pec.ca.salva.notifica.accettazione.rifiuto"/>

            <choice>
                <when>
                    <simple>${headers.infoTipoInvioFatturaCA} == 'Protocollazione' and ${headers.tipoMessaggio} == 'NotificaScartoEsito'</simple>

                        <toD uri="${headers.codaGestionaleCAIn}"/>

                </when>
            </choice>
        </route>

        <route id="enti.bridge.pec.ca.registrazione.invio.common">
            <from uri="direct:registrazioneInvioCommon"/>

            <removeHeader headerName="to"/>
            <removeHeader headerName="To"/>
            <removeHeader headerName="From"/>
            <removeHeader headerName="from"/>
            <removeHeader headerName="subject"/>
            <removeHeader headerName="Subject"/>

            <setHeader headerName="to">
                <simple>${headers.endpointGestionale}</simple>
            </setHeader>

            <setHeader headerName="from">
                <simple>{{ente.pec.ca.indirizzo.email.username.intero}}</simple>
            </setHeader>

            <enrich strategyRef="pecCAPreparazioneInvioStrategy">
                <simple>{{enti.bridge.ente.pec.ca.preparazione.invio.enricher}}</simple>
            </enrich>

            <setHeader headerName="tipoOperazione">
                <constant>registrazioneNotifica</constant>
            </setHeader>

            <inOnly uri="{{aggiorna.stato.notifica.ca.queue}}"/>
            <inOnly uri="direct:enti.bridge.pec.ca.salva.notifica.accettazione.rifiuto"/>

        </route>

        <route id="preparazioneInvioMessaggioPecCA">
            <from uri="direct:preparazioneInvioMessaggioPecCA"/>

            <process ref="pecCAFatturaPassivaCreaSubjectProcessor"/>

            <!-- Adatto sia per NotificaEsitoCommittente che per NotificaScartoEsito -->
            <bean ref="pecCAManager" method="preparaMessaggioNotifica"/>

            <choice>
                <when>
                    <simple>${headers.tipoMessaggio} == 'NotificaScartoEsito'</simple>
                        <to uri="xslt:xsl/{{ente.bridge.pec.ca.template.notifica.scarto.esito.committente}}"/>
                </when>
                <otherwise>
                    <to uri="xslt:xsl/{{ente.bridge.pec.ca.template.notifica.esito.committente}}"/>
                </otherwise>
            </choice>

            <enrich strategyRef="pecCAProtocollazioneEsitoCommittenteAggregationStrategy">
                <simple>{{enti.bridge.ente.pec.ca.protocollo.registrazione.invio.enricher}}</simple>
            </enrich>
        </route>

        <route id="enti.bridge.ente.pec.ca.protocollo.registrazione.invio.enricher">
            <from uri="{{enti.bridge.ente.pec.ca.protocollo.registrazione.invio.enricher}}"/>

            <removeHeaders pattern="*" excludePattern="to|from|subject"/>

            <setHeader headerName="content-type">
                <constant>text/html</constant>
            </setHeader>

            <to uri="smtps://{{ente.pec.ca.indirizzo.email.username.intero}}@{{ente.pec.ca.indirizzo.email.host}}?password={{ente.pec.ca.indirizzo.email.password}}&amp;username={{ente.pec.ca.indirizzo.email.username.intero}}&amp;port={{ente.pec.ca.indirizzo.email.port.smtps}}&amp;headerFilterStrategy=#FatturaHeadersMailFilterStrategy"/>

        </route>

    </camelContext>
</blueprint>