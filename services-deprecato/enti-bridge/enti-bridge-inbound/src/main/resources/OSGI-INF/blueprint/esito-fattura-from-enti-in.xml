<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0
                               http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">

    <camelContext xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" managementNamePattern="#symbolicName#-#counter#"
                  useMDCLogging="true" xmlns="http://camel.apache.org/schema/blueprint"
                  id="enti.bridge.inbound.ricevi.notifiche"
                  xsi:schemaLocation="http://camel.apache.org/schema/blueprint ">

        <!--  <dataFormats>

              <jaxb id="esitoNotificheFromEntiDataFormat" prettyPrint="true"
                    contextPath="it.extrasys.marche.regione.fatturapa.contracts.esito.fattura.from.enti.beans"/>

          </dataFormats>-->

        <onException>
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPAFatturaGiaAccettataRifiutataException</exception>
            <handled>
                <constant>true</constant>
            </handled>
            <log message="EXCEPTION MESSAGE=${exception.message} STACKTRACE=${exception.stacktrace}"
                 loggingLevel="ERROR"/>
            <setHeader headerName="ErrorCode">
                <constant>EN02</constant>
            </setHeader>
            <setHeader headerName="ErrorDescription">
                <simple>${exception.message}</simple>
            </setHeader>
            <!--<inOnly uri="{{error.notification.endpointXA}}"/>-->
            <process ref="creaMessaggioRispostaFallimentoProcessor"/>
            <rollback markRollbackOnly="true"/>

            <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

        </onException>

        <onException>
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPAFatturaNonTrovataException</exception>
            <handled>
                <constant>true</constant>
            </handled>
            <log message="EXCEPTION MESSAGE=${exception.message} STACKTRACE=${exception.stacktrace}"
                 loggingLevel="ERROR"/>
            <setHeader headerName="ErrorCode">
                <constant>EN01</constant>
            </setHeader>
            <setHeader headerName="ErrorDescription">
                <simple>${exception.message}</simple>
            </setHeader>
            <process ref="creaMessaggioRispostaFallimentoProcessor"/>
            <rollback markRollbackOnly="true"/>
            <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

        </onException>

        <onException>
            <exception>java.lang.Exception</exception>
            <handled>
                <constant>true</constant>
            </handled>
            <log message="EXCEPTION MESSAGE=${exception.message} STACKTRACE=${exception.stacktrace}"
                 loggingLevel="ERROR"/>
            <setHeader headerName="ErrorCode">
                <constant>EN03</constant>
            </setHeader>
            <setHeader headerName="ErrorDescription">
                <simple>SERVIZIO NON DISPONIBILE</simple>
            </setHeader>

            <process ref="creaMessaggioRispostaFallimentoProcessor"/>
            <rollback markRollbackOnly="true"/>
            <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

        </onException>

        <route id="enti.bridge.inbound.esito.fattura">
            <from uri="{{enti.inbound.cxf.endpoint.esito.fattura}}"/>

            <transacted ref="XA_TX_REQUIRED"/>

            <process ref="creaIdComunicazioneProcessor"/>

            <log message="Ricevuta Notifica Da Ente con ID COMUNICAZIONE: ${header.idComunicazione}"
                 loggingLevel="INFO"/>

            <process ref="salvaNotificheProcessor"/>

            <split>
                <simple>${body}</simple>
                <log message="eila" loggingLevel="DEBUG"/>
                <inOnly uri="{{sdi.outbound.invio.notifica.queue}}" id="toSDIOutboundId"/>
            </split>

            <process ref="creaMessaggioRispostaSuccessoProcessor"/>

        </route>

    </camelContext>


</blueprint>