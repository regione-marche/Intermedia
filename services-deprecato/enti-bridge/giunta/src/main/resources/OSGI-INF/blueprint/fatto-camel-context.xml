<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0
                               http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">


	<camelContext managementNamePattern="#symbolicName#-#counter#" useMDCLogging="true" trace="{{enable.trace}}" id="enti.bridge.giunta.fatto" xmlns="http://camel.apache.org/schema/blueprint">

		<route id="enti.bridge.giunta.fatto">
			<from uri="{{giunta.registrazione.endopoint}}" />
			<choice>
				<when>
					<simple>${headers.tipoMessaggio} == 'FatturaElettronica'</simple>
					<log loggingLevel="INFO"
						 message="GIUNTA: REGISTRAZIONE: RICEVUTA FATTURA - IDENTIFICATIVO SDI  ${in.header.identificativoSdI}"/>
					<to uri="direct:enti.bridge.giunta.fatto.fattura" />
					<log loggingLevel="INFO"
						 message="GIUNTA: REGISTRAZIONE:END REGISTRAZIONE FATTURA - IDENTIFICATIVO SDI  ${in.header.identificativoSdI}"/>

				</when>
				<when>
					<simple>${headers.tipoMessaggio} == 'NotificaDecorrenzaTermini'</simple>
					<log loggingLevel="INFO"
						 message="GIUNTA: REGISTRAZIONE: RICEVUTA NOTIFICA DECORRENZA TERMINI - IDENTIFICATIVO SDI  ${in.header.identificativoSdI}"/>
					<to uri="direct:enti.bridge.giunta.fatto.notificaDecorrenzaTermini" />
					<log loggingLevel="INFO"
						 message="GIUNTA: REGISTRAZIONE: END REGISTRAZIONE NOTIFICA DECORRENZA TERMINI - IDENTIFICATIVO SDI  ${in.header.identificativoSdI}"/>

				</when>

				<when>
					<simple>${headers.tipoMessaggio} == 'NotificaScartoEsito'</simple>
					<log loggingLevel="INFO"
						 message="GIUNTA: REGISTRAZIONE: RICEVUTA NOTIFICA SCARTO ESITO - IDENTIFICATIVO SDI  ${in.header.identificativoSdI}"/>
					<to uri="direct:enti.bridge.giunta.fatto.scartoEsito" />
					<log loggingLevel="INFO"
						 message="GIUNTA: REGISTRAZIONE: END REGISTRAZIONE NOTIFICA SCARTO ESITO - IDENTIFICATIVO SDI  ${in.header.identificativoSdI}"/>

				</when>

			</choice>
		</route>

		<route id="enti.bridge.giunta.fatto.fattura">
			<from uri="direct:enti.bridge.giunta.fatto.fattura" />
			<convertBodyTo type="it.extrasys.marche.regione.fatturapa.enti.bridge.paleo.model.FatturaElettronicaWrapper" />

			<setHeader headerName="numeroProtocollo">
				<simple>${body.segnaturaProtocollo}</simple>
			</setHeader>

			<setHeader headerName="fattoOriginalBody">
				<simple>${body}</simple>
			</setHeader>
			<setBody>
				<simple>${body.fatturaElettronica}</simple>
			</setBody>
			<setHeader headerName="fatturaElettronicaHeader">
				<xpath>/*[local-name()='FatturaElettronica']/FatturaElettronicaHeader</xpath>
			</setHeader>
			<split streaming="true">
				<tokenize token="FatturaElettronicaBody" xml="true" />
				<setBody>
					<simple> <![CDATA[<?xml version="1.0" encoding="UTF-8"?><p:FatturaElettronica xmlns:p="http://ivaservizi.agenziaentrate.gov.it/docs/xsd/fatture/v1.2" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" versione="FPA12">
${headers.fatturaElettronicaHeader}
${body}
</p:FatturaElettronica>]]></simple>
				</setBody>
				<to uri="direct:setNumeroFatturaHeader" />
				<process ref="fattoRupHeaderProcessor" />
				<to uri="direct:callFattoFattura" id="callFatto" />
			</split>
		</route>

		<route id="enti.bridge.giunta.fatto.notificaDecorrenzaTermini">
			<from uri="direct:enti.bridge.giunta.fatto.notificaDecorrenzaTermini" />

			<convertBodyTo type="it.extrasys.marche.regione.fatturapa.enti.bridge.paleo.model.NotificaDecorrenzaTerminiWrapper" />
			<setHeader headerName="numeroProtocollo">
				<simple>${body.segnaturaProtocolloFattura}</simple>
			</setHeader>
			<process ref="gestisciStatoFatturaProcessor" />
			<split streaming="true">
				<simple>${body}</simple>
				<setHeader headerName="numeroFattura">
					<simple>${body.numeroFattura}</simple>
				</setHeader>
				<to uri="direct:callFattoNotifica" id="callFatto2" />
			</split>
		</route>

		<route id="enti.bridge.giunta.fatto.scartoEsito">
			<from uri="direct:enti.bridge.giunta.fatto.scartoEsito" />

			<process ref="gestisciStatoFatturaProcessor" />
			<split streaming="true">
				<simple>${body}</simple>
				<setHeader headerName="numeroProtocollo">
					<simple>${body.numeroProtocollo}</simple>
				</setHeader>
				<setHeader headerName="numeroFattura">
					<simple>${body.numeroFattura}</simple>
				</setHeader>
				<to uri="direct:callFattoNotifica" id="callFatto3" />
			</split>
		</route>

		<route id="setFatturaRupHeaderRoute">
			<from uri="direct:setNumeroFatturaHeader" />
			<log loggingLevel="INFO"
				 message="GIUNTA: REGISTRAZIONE: START VALORIZZAZIONE setFatturaRupHeadersRoute - IDENTIFICATIVO SDI  ${in.header.identificativoSdI}"/>
			<setHeader headerName="numeroFattura">
				<xpath resultType="java.lang.String">
					//*[local-name() = 'DatiGeneraliDocumento']/*[local-name() = 'Numero']
				</xpath>
			</setHeader>
			<process ref="fattoRupHeaderProcessor" />
			<log loggingLevel="INFO"
				 message="GIUNTA: REGISTRAZIONE: END VALORIZZAZIONE setFatturaRupHeadersRoute - IDENTIFICATIVO SDI  ${in.header.identificativoSdI}"/>

		</route>

		<route id="enti.bridge.giunta.fatto.callFattoFatturaRoute">
			<from uri="direct:callFattoFattura" />
			<log loggingLevel="INFO"
				 message="GIUNTA: REGISTRAZIONE: START VALORIZZAZIONE setFatturaRupHeadersRoute - IDENTIFICATIVO SDI  ${in.header.identificativoSdI}"/>

			<setHeader headerName="bodyToSend">
				<simple>${body}</simple>
			</setHeader>
			<!-- <to uri="bean:outgoingMultipartEncoderProcessor" /> -->

			<!-- regma138 -->
			<process ref="formattaDataCreazioneProcessor"/>

			<to uri="velocity:velocity/postFatturaRequest.vm" />
			<to uri="direct:callRs1" id="callRs1" />
			<choice>
				<when>
					<simple>${headers.rupAssegnato}</simple>
					<to uri="velocity:velocity/putRupRequest.vm" />
					<to uri="direct:callRs2" id="callRs2" />
				</when>
				<otherwise>
					<log loggingLevel="INFO"
						 message="GIUNTA: REGISTRAZIONE: CHIAMATA A WS SALTATA: rupAssegnato = ${headers.rupAssegnato} - IDENTIFICATIVO SDI  ${in.header.identificativoSdI}"/>
				</otherwise>
			</choice>

			<!-- cambia stato alla fattura in REGISTRATA -->
			<!--to uri="bean:datiFatturaManager?method=registraFattura(${headers.idFiscaleCommittente}, ${headers.numeroProtocollo}, ${headers.numeroFattura})" /-->
			<choice>
				<when>
					<simple>${headers.fatto409} == true</simple>

					<!-- Nel caso in cui la chiamata torna 409 non bisogna fare nulla in quanto è già registrata -->
					<log loggingLevel="INFO" message="GIUNTA: REGISTRAZIONE: FATTURA CON IDENTIFICATIVO SDI ${in.header.identificativoSdI} GIA' REGISTRATA SU FATTO!"/>

				</when>
				<otherwise>

					<to uri="bean:datiFatturaManager?method=registraFattura(${headers.codiceUfficio}, ${headers.numeroProtocollo}, ${headers.numeroFattura})" />

				</otherwise>
			</choice>

			<log message="GIUNTA: REGISTRAZIONE: FATTURA CON IDENTIFICATIVO SDI: ${headers.identificativoSdI} NUMERO FATTURA: ${headers.numeroFattura}  REGISTRATA SUL DB"
				 loggingLevel="INFO"/>
		</route>

		<route id="enti.bridge.giunta.fatto.callFattoNotificaRoute">
			<from uri="direct:callFattoNotifica" />
			<log message="GIUNTA: REGISTRAZIONE: START callFattoNotifica IDENTIFICATIVO SDI: ${headers.identificativoSdI}"
				 loggingLevel="INFO"/>
			<setHeader headerName="fatturaEntity">
				<simple>${body}</simple>
			</setHeader>

			<choice>
				<when>
					<simple>${headers.tipoMessaggio} == 'NotificaScartoEsito'</simple>
					<to uri="velocity:velocity/putStatoFatturaRifiutataDaSdIRequest.vm" />
					<to uri="direct:callRs9" id="callRs9" />
					<!-- attualmente non e' previsto uno stato che specifichi l'invio di una notifica di scarto all'ente -->
					<log message="GIUNTA: REGISTRAZIONE NOTIFICA SCARTO ESITO: END callFattoNotifica IDENTIFICATIVO SDI: ${headers.identificativoSdI}"
						 loggingLevel="INFO"/>
				</when>
				<when>
					<simple>${headers.tipoMessaggio} == 'NotificaDecorrenzaTermini'</simple>

					<to uri="velocity:velocity/putStatoFatturaRequest.vm" />
					<to uri="direct:callRs9" id="callRs9" />
					<!-- cambia stato alla fattura in ACCETTATA_PER_DECORRENZA_TERMINI -->
					<to uri="bean:datiFatturaManager?method=accettaFattura(${headers.fatturaEntity})" />
					<log message="GIUNTA: REGISTRAZIONE NOTIFICA DECORRENZA TERMINI: END callFattoNotifica IDENTIFICATIVO SDI: ${headers.identificativoSdI}"
						 loggingLevel="INFO"/>
				</when>
			</choice>
		</route>

		<route id="rs1Route">
			<from uri="direct:callRs1" />

			<log message="GIUNTA: REGISTRAZIONE: START rs1Route IDENTIFICATIVO SDI: ${headers.identificativoSdI}"
				 loggingLevel="INFO"/>

			<setHeader headerName="CamelHttpMethod">
				<constant>POST</constant>
			</setHeader>
			<setHeader headerName="Authorization">
				<simple>Basic {{authorizationTokenFatto}}</simple>
			</setHeader>
			<setHeader headerName="User-Agent">
				<simple>{{rs1User-Agent}}</simple>
			</setHeader>
			<setHeader headerName="Origin">
				<simple>{{rs1Origin}}</simple>
			</setHeader>
			<setHeader headerName="Connection">
				<constant>keep-alive</constant>
			</setHeader>
			<setHeader headerName="Content-Type">
				<simple>multipart/form-data; boundary={{extraFormBoundary}}</simple>
			</setHeader>

			<setHeader headerName="fatto409">
				<simple>false</simple>
			</setHeader>

			<setHeader headerName="uriDaChiamare">
				<simple>{{fattoEndpoint}}/api/Fattura?bridgeEndpoint=true&amp;throwExceptionOnFailure=true&amp;headerFilterStrategy=#headerFilterStrategy</simple>
			</setHeader>

			<doTry>

				<toD uri="${headers.uriDaChiamare}"/>

				<doCatch>
					<exception>org.apache.camel.http.common.HttpOperationFailedException</exception>
					<handled>
						<simple>true</simple>
					</handled>

					<process ref="log"/>

					<log message="GIUNTA: REGISTRAZIONE STATUS ${headers.rejectCode} - ${headers.rejectDescription} - ${headers.response}: IDENTIFICATIVO SDI: ${headers.identificativoSdI}" loggingLevel="INFO"/>

					<choice>
						<when>
							<simple>${headers.rejectCode} == '409' || ${headers.rejectCode} == 409</simple>
							<!-- 409 significa che la fattura è già stata registrata quindi non bisogna fare nulla -->
							<!-- E' già stata inserita una fattura con lo stesso numero/data fattura, stessa iva prestatore e stessa segnatura di protocollo. -->

							<setHeader headerName="fatto409">
								<simple>true</simple>
							</setHeader>
						</when>
						<otherwise>
							<throwException ref="fatturaPAFatalException"/>
						</otherwise>
					</choice>

				</doCatch>
				<doCatch>
					<exception>org.apache.camel.component.http4.HttpOperationFailedException</exception>
					<handled>
						<simple>true</simple>
					</handled>

					<process ref="log"/>

					<log message="GIUNTA: REGISTRAZIONE STATUS ${headers.rejectCode} - ${headers.rejectDescription} - ${headers.response}: IDENTIFICATIVO SDI: ${headers.identificativoSdI}" loggingLevel="INFO"/>

					<choice>
						<when>
							<simple>${headers.rejectCode} == '409' || ${headers.rejectCode} == 409</simple>
							<!-- 409 significa che la fattura è già stata registrata quindi non bisogna fare nulla -->
							<!-- E' già stata inserita una fattura con lo stesso numero/data fattura, stessa iva prestatore e stessa segnatura di protocollo. -->

							<setHeader headerName="fatto409">
								<simple>true</simple>
							</setHeader>
						</when>
						<otherwise>
							<throwException ref="fatturaPAFatalException"/>
						</otherwise>
					</choice>

				</doCatch>
			</doTry>


			<onException useOriginalMessage="true">
				<exception>java.lang.Exception</exception>
				<redeliveryPolicy maximumRedeliveries="0" />
				<!--Mette in coda lo stacktrace-->
				<setHeader headerName="exception">
					<simple>${exception.stacktrace}</simple>
				</setHeader>

				<wireTap uri="{{gestione.stacktrace.in.queue}}"/>

				<to uri="log:it.extrasys.marche.regione.fatturapa.tracing.giunta?level=ERROR&amp;showAll=true&amp;multiline=true" />

			</onException>

			<log message="GIUNTA: REGISTRAZIONE: END rs1Route IDENTIFICATIVO SDI: ${headers.identificativoSdI}" loggingLevel="INFO"/>

		</route>


		<route id="rs2Route">
			<from uri="direct:callRs2" />
			<log message="GIUNTA: REGISTRAZIONE: START callRs2 IDENTIFICATIVO SDI: ${headers.identificativoSdI}"
				 loggingLevel="INFO"/>
			<setHeader headerName="CamelHttpMethod">
				<constant>PUT</constant>
			</setHeader>
			<setHeader headerName="Authorization">
				<simple>Basic {{authorizationTokenFatto}}</simple>
			</setHeader>
			<setHeader headerName="Content-Type">
				<constant>application/json</constant>
			</setHeader>

			<setHeader headerName="uriDaChiamare">
				<simple>{{fattoEndpoint}}/api/Fattura?bridgeEndpoint=true&amp;protocollo=${headers.numeroProtocollo}&amp;headerFilterStrategy=#headerFilterStrategy</simple>
			</setHeader>

			<to uri="log:it.extrasys.marche.regione.fatturapa.giunta.FattoEndpointRs2?level=DEBUG&amp;showAll=true&amp;multiline=false"/>

			<routingSlip>
				<header>uriDaChiamare</header>
			</routingSlip>

			<onException useOriginalMessage="true">
				<exception>java.lang.Exception</exception>
				<redeliveryPolicy maximumRedeliveries="0" />
				<!--Mette in coda lo stacktrace-->
				<setHeader headerName="exception">
					<simple>${exception.stacktrace}</simple>
				</setHeader>

				<wireTap uri="{{gestione.stacktrace.in.queue}}"/>

				<to uri="log:it.extrasys.marche.regione.fatturapa.tracing.giunta?level=ERROR&amp;showAll=true&amp;multiline=true" />

			</onException>
			<log message="GIUNTA: REGISTRAZIONE: END callRs2 IDENTIFICATIVO SDI: ${headers.identificativoSdI}"
				 loggingLevel="INFO"/>

		</route>

		<route id="rs9Route">
			<from uri="direct:callRs9" />
			<log message="GIUNTA: REGISTRAZIONE: START callRs9 IDENTIFICATIVO SDI: ${headers.identificativoSdI}"
				 loggingLevel="INFO"/>

			<setHeader headerName="CamelHttpMethod">
				<constant>PUT</constant>
			</setHeader>
			<setHeader headerName="Authorization">
				<simple>Basic {{authorizationTokenFatto}}</simple>
			</setHeader>
			<setHeader headerName="Content-Type">
				<constant>application/json</constant>
			</setHeader>
			<setHeader headerName="uriDaChiamare">
				<simple>{{fattoEndpoint}}/api/StatoFattura?protocollo=${headers.numeroProtocollo}&amp;numfattura=${headers.numeroFattura}&amp;headerFilterStrategy=#headerFilterStrategy&amp;bridgeEndpoint=true</simple>
			</setHeader>
			<to uri="log:it.extrasys.marche.regione.fatturapa.giunta.FattoEndpointRs9?level=INFO&amp;showAll=true&amp;multiline=false" />
			<routingSlip>
				<header>uriDaChiamare</header>
			</routingSlip>
			<onException useOriginalMessage="true">
				<exception>java.lang.Exception</exception>
				<redeliveryPolicy maximumRedeliveries="0" />
				<!--Mette in coda lo stacktrace-->
				<setHeader headerName="exception">
					<simple>${exception.stacktrace}</simple>
				</setHeader>

				<wireTap uri="{{gestione.stacktrace.in.queue}}"/>

				<to uri="log:it.extrasys.marche.regione.fatturapa.tracing.giunta?level=ERROR&amp;showAll=true&amp;multiline=true" />

			</onException>
			<log message="GIUNTA: REGISTRAZIONE: END callRs9 IDENTIFICATIVO SDI: ${headers.identificativoSdI}"
				 loggingLevel="INFO"/>

		</route>

	</camelContext>

</blueprint>