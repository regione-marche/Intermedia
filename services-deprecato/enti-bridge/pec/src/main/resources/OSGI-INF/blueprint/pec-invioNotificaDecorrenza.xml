<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0
                               http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">


    <camelContext managementNamePattern="#symbolicName#-#counter#" useMDCLogging="true"
                  xmlns="http://camel.apache.org/schema/blueprint" id="ctx.enti.bridge.pec.notifica.decorrenza"
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xsi:schemaLocation="http://camel.apache.org/schema/blueprint ">

        <!-- *********** EXCEPTION CATCHER DECLARATION *********** -->
        <onException useOriginalMessage="true">
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPAFatalException</exception>
            <redeliveryPolicy maximumRedeliveries="0"/>
            <to uri="log:it.extrasys.marche.regione.fatturapa.salva.fatture.persistence?level=ERROR&amp;showAll=true&amp;multiline=true"/>
            <!--<to uri="{{enti.bridge.pec.dlq}}"/>
            <to uri="{{error.notification.queue}}"/>-->
        </onException>

        <onException useOriginalMessage="true">
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPAEnteNonTrovatoException</exception>
            <redeliveryPolicy maximumRedeliveries="0"/>
            <to uri="log:it.extrasys.marche.regione.fatturapa.salva.fatture.persistence?level=ERROR&amp;showAll=true&amp;multiline=true"/>
            <!--<to uri="{{enti.bridge.pec.dlq}}"/>
            <to uri="{{error.notification.queue}}"/>-->
        </onException>

        <onException useOriginalMessage="true" >
            <exception>java.lang.Exception</exception>
            <redeliveryPolicy maximumRedeliveries="0"/>
            <to uri="log:it.extrasys.marche.regione.fatturapa.tracing.persistence?level=ERROR&amp;showAll=true&amp;multiline=true"/>
            <!--  <to uri="{{enti.bridge.pec.dlq}}"/>
              <to uri="{{error.notification.queue}}"/>-->
        </onException>

        <onException useOriginalMessage="true" redeliveryPolicyRef="pecInvioNotificaDecorrenzaRedeliveryPolicyConfig">
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPaPersistenceException</exception>
            <to uri="log:it.extrasys.marche.regione.fatturapa.tracing.persistence?level=ERROR&amp;showAll=true&amp;multiline=true"/>
            <!--<to uri="{{enti.bridge.pec.persistence.dlq}}"/>
            <to uri="{{error.notification.queue}}"/>-->
        </onException>

        <route id="enti.bridge.pec.invio.notifica.decorrenza">
            <from uri="{{enti.bridge.ente.pec.invio.queue}}?selector=tipoMessaggio='NotificaDecorrenzaTermini'"/>

            <log message="ENTI BRIDGE PEC INVIO NOTIFICA DECORRENZA STARTED"/>

            <setHeader headerName="tipoMessaggio">
                <simple>NotificaDecorrenzaTermini</simple>
            </setHeader>

            <bean ref="pecManager" method="preparaMessaggio"/>

            <setHeader headerName="from">
                <simple>{{ente.pec.indirizzo.email.username.intero}}</simple>
            </setHeader>

            <setHeader headerName="subject">
                <simple>{{ente.pec.subject.decorrenza.termini}} - Identificativo SDI: ${in.headers.identificativoSdi}</simple>
            </setHeader>

            <to uri="xslt:xsl/{{ente.bridge.pec.template.decorrenza.termini}}"/>

            <setHeader headerName="content-type">
                <constant>text/html</constant>
            </setHeader>

            <removeHeader headerName="SOAP-ACTION"/>

           <!-- <log message="ENTI BRIDGE PEC INVIO FATTURA DOPO TRASFORMAZIONE - uri del to: smtp://{{ente.pec.indirizzo.email.username.intero}}@{{ente.pec.indirizzo.email.host}}?password={{ente.pec.indirizzo.email.password}}&amp;username={{ente.pec.indirizzo.email.username}}&amp;port={{ente.pec.indirizzo.email.port}}"/> -->

            <to uri="smtps://{{ente.pec.indirizzo.email.username.intero}}@{{ente.pec.indirizzo.email.host}}?password={{ente.pec.indirizzo.email.password}}&amp;username={{ente.pec.indirizzo.email.username.intero}}&amp;port={{ente.pec.indirizzo.email.port}}&amp;headerFilterStrategy=#FatturaHeadersMailFilterStrategy"/>

            <!--<to uri="direct:aggiornaNotificaDecorrenza"/>-->

            <inOnly uri="{{aggiorna.stato.notifica.decorrenza.queue}}"/>

        </route>

        <route id="aggiornaFattura">
            <!--<from uri="direct:aggiornaNotificaDecorrenza"/>-->
            <from uri="{{aggiorna.stato.notifica.decorrenza.queue}}"/>

            <log message="ENTI BRIDGE PEC INVIO FATTURA AGGIORNAMENTO FATTURA"/>

            <!-- devo aggiornare lo stato della fattura e anche il progressivo d'invio -->
            <bean ref="pecManager" method="aggiornaFattura"/>

            <log message="ENTI BRIDGE PEC INVIO NOTIFICA DECORRENZA: FATTURA AGGIORNATA"/>
        </route>

    </camelContext>


</blueprint>