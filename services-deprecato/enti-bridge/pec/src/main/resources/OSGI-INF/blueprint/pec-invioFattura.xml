<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0
                               http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">

    <camelContext managementNamePattern="#symbolicName#-#counter#" useMDCLogging="true"
                  xmlns="http://camel.apache.org/schema/blueprint" id="ctx.enti.bridge.pec.fattura">

    <!-- *********** EXCEPTION CATCHER DECLARATION *********** -->
        <onException useOriginalMessage="true">
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPAFatalException</exception>
            <redeliveryPolicy maximumRedeliveries="0"/>
            <to uri="log:it.extrasys.marche.regione.fatturapa.salva.fatture.persistence?level=ERROR&amp;showAll=true&amp;multiline=true"/>
            <!-- <to uri="{{enti.bridge.pec.dlq}}"/>
             <to uri="{{error.notification.queue}}"/>-->
        </onException>

        <onException useOriginalMessage="true" >
            <exception>java.lang.Exception</exception>
            <redeliveryPolicy maximumRedeliveries="0"/>
            <to uri="log:it.extrasys.marche.regione.fatturapa.tracing.persistence?level=ERROR&amp;showAll=true&amp;multiline=true"/>
            <!--<to uri="{{enti.bridge.pec.dlq}}"/>
            <to uri="{{error.notification.queue}}"/>-->
        </onException>

        <onException useOriginalMessage="true">
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPAEnteNonTrovatoException</exception>
            <redeliveryPolicy maximumRedeliveries="0"/>
            <to uri="log:it.extrasys.marche.regione.fatturapa.salva.fatture.persistence?level=ERROR&amp;showAll=true&amp;multiline=true"/>
            <!-- <to uri="{{enti.bridge.pec.dlq}}"/>
             <to uri="{{error.notification.queue}}"/>-->
        </onException>

        <onException useOriginalMessage="true" redeliveryPolicyRef="pecInvioFatturaRedeliveryPolicyConfig">
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPaPersistenceException</exception>
            <to uri="log:it.extrasys.marche.regione.fatturapa.tracing.persistence?level=ERROR&amp;showAll=true&amp;multiline=true"/>
            <!-- <to uri="{{enti.bridge.pec.persistence.dlq}}"/>
             <to uri="{{error.notification.queue}}"/>-->
        </onException>

        <route id="enti.bridge.pec.invio.fattura">
            <from uri="{{enti.bridge.ente.pec.invio.queue}}?selector=tipoMessaggio='FatturaElettronica'"/>

            <log message="PEC: ENTI BRIDGE PEC INVIO FATTURA STARTED - IDENTIFICATIVO SDI: ${headers.identificativoSdI}"/>

            <setHeader headerName="tipoMessaggio">
                <simple>FatturaElettronica</simple>
            </setHeader>

            <bean ref="pecManager" method="preparaMessaggio"/>

            <setHeader headerName="from">
                <simple>{{ente.pec.indirizzo.email.username.intero}}</simple>
            </setHeader>

            <process ref="pecFatturaPassivaCreaSubjectProcessor"/>

 <!--           <setHeader headerName="subject">
                <simple>{{ente.pec.subject.fattura}} - Identificativo SDI: ${in.headers.identificativoSdi}</simple>
            </setHeader>-->

            <choice>
                <when>
                    <!-- controllo la versione della fattura per scegliere il tipo di xslt da utilizzare -->
                    <xpath resultType="java.lang.String">count(//*[local-name()='FatturaElettronica']/@versione) >=1</xpath>

                    <setHeader headerName="versioneFattura">
                        <xpath resultType="java.lang.String">//*[local-name()='FatturaElettronica']/@versione</xpath>
                    </setHeader>

                    <!-- Ripulisco xml da caratteri strani non UTF-8 -->
                    <to uri="xslt:xsl/cleaner_xml.xsl"/>
                    
                    <choice>
                        <when>
                            <simple>${header.versioneFattura} == 'FPA12'</simple>

                            <log message="PEC: ENTI BRIDGE PEC INVIO FATTURA versione fatturapa 1.2.1" loggingLevel="INFO"/>

                            <to uri="xslt:xsl/{{ente.bridge.pec.template.fattura.versione.1.2.1}}"/>
                        </when>
                        <when>
                            <simple>${header.versioneFattura} == '1.1'</simple>

                            <log message="PEC: ENTI BRIDGE PEC INVIO FATTURA versione fatturapa 1.1" loggingLevel="INFO"/>

                            <to uri="xslt:xsl/{{ente.bridge.pec.template.fattura.versione.1.1}}"/>
                        </when>
                        <otherwise>
                            <log message="PEC: ENTI BRIDGE PEC INVIO FATTURA versione fatturapa non trovata" loggingLevel="WARN"/>
                            <to uri="xslt:xsl/{{ente.bridge.pec.template.fattura.versione.default}}"/>
                        </otherwise>
                    </choice>
                </when>
                <otherwise>
                    <log message="PEC: ENTI BRIDGE PEC INVIO FATTURA versione fatturapa non trovata" loggingLevel="WARN"/>
                    <to uri="xslt:xsl/{{ente.bridge.pec.template.fattura.versione.default}}"/>
                </otherwise>

            </choice>


            <setHeader headerName="content-type">
                <constant>text/html</constant>
            </setHeader>

            <removeHeader headerName="SOAP-ACTION"/>

            <!--<log message="ENTI BRIDGE PEC INVIO FATTURA DOPO TRASFORMAZIONE - uri del to: smtp://{{ente.pec.indirizzo.email.username.intero}}@{{ente.pec.indirizzo.email.host}}?password={{ente.pec.indirizzo.email.password}}&amp;username={{ente.pec.indirizzo.email.username}}&amp;port={{ente.pec.indirizzo.email.port}}"/>-->

            <to uri="smtps://{{ente.pec.indirizzo.email.username.intero}}@{{ente.pec.indirizzo.email.host}}?password={{ente.pec.indirizzo.email.password}}&amp;username={{ente.pec.indirizzo.email.username.intero}}&amp;port={{ente.pec.indirizzo.email.port}}&amp;headerFilterStrategy=#FatturaHeadersMailFilterStrategy"/>

            <!--<to uri="direct:aggiornaFattura"/>-->
            <inOnly uri="{{aggiorna.stato.fattura.queue}}"/>
            <log message="PEC: ENTI BRIDGE PEC INVIO FATTURA END - IDENTIFICATIVO SDI: ${headers.identificativoSdI}"/>


        </route>

        <route id="aggiornaFattura">
            <!--<from uri="direct:aggiornaFattura"/>-->
            <from uri="{{aggiorna.stato.fattura.queue}}"/>

            <log message="PEC:ENTI BRIDGE PEC INVIO FATTURA AGGIORNAMENTO FATTURA - IDENTIFICATIVO SDI: ${headers.identificativoSdI}"/>

            <!-- devo aggiornare lo stato della fattura e anche il progressivo d'invio -->
            <bean ref="pecManager" method="aggiornaFattura"/>

            <log message="PEC: ENTI BRIDGE PEC INVIO FATTURA: FATTURA AGGIORNATA - IDENTIFICATIVO SDI: ${headers.identificativoSdI}"/>
        </route>

    </camelContext>
</blueprint>