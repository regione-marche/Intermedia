<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0
                               http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">

    <camelContext xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" managementNamePattern="#symbolicName#-#counter#"
                  useMDCLogging="true" xmlns="http://camel.apache.org/schema/blueprint"
                  id="ctx.enti.bridge.pec.fatturazione.attiva"
                  xsi:schemaLocation="http://camel.apache.org/schema/blueprint ">

        <onException useOriginalMessage="true">
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPAEnteNonTrovatoException</exception>

            <handled>
                <constant>true</constant>
            </handled>

            <setHeader headerName="tipoErrore">
                <simple>enteNonTrovato</simple>
            </setHeader>

            <log message="FatturaPAEnteNonTrovatoException o AddressException"/>

            <to uri="direct:enti.bridge.pec.attiva.inoltro.errori"/>


        </onException>

        <onException useOriginalMessage="true" redeliveryPolicyRef="pecAttivaInvioFatturaRedeliveryPolicyConfig">
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPaPersistenceException</exception>

            <handled>
                <constant>true</constant>
            </handled>

            <setHeader headerName="tipoErrore">
                <simple>persistenceError</simple>
            </setHeader>

            <log message="FatturaPaPersistenceException"/>
            <to uri="log:it.extrasys.marche.regione.fatturapa.tracing.persistence?level=ERROR&amp;showAll=true&amp;multiline=true"/>
            <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

            <to uri="direct:enti.bridge.pec.attiva.inoltro.errori"/>

        </onException>

        <onException useOriginalMessage="true">
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPAAllegatoAttivaNonTrovatoException</exception>

            <handled>
                <constant>true</constant>
            </handled>

            <setHeader headerName="tipoErrore">
                <simple>allegatoNonTrovato</simple>
            </setHeader>

            <log message="FatturaPAAllegatoAttivaNonTrovatoException"/>
            <to uri="log:it.extrasys.marche.regione.fatturapa.tracing.persistence?level=ERROR&amp;showAll=true&amp;multiline=true"/>

            <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

            <to uri="direct:enti.bridge.pec.attiva.inoltro.errori"/>

        </onException>

        <onException useOriginalMessage="true">
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPAException</exception>
            <exception>java.lang.Exception</exception>

            <handled>
                <constant>true</constant>
            </handled>

            <log message="FatturaPAException"/>
            <to uri="log:it.extrasys.marche.regione.fatturapa.tracing.persistence?level=ERROR&amp;showAll=true&amp;multiline=true"/>
            <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

            <to uri="direct:enti.bridge.pec.attiva.inoltro.errori"/>

        </onException>

        <route id="enti.bridge.pec.attiva.inbound">
            <from uri="imaps://{{ente.pec.attiva.indirizzo.email.username.intero}}@{{ente.pec.attiva.indirizzo.email.host}}?password={{ente.pec.attiva.indirizzo.email.password}}&amp;username={{ente.pec.attiva.indirizzo.email.username.intero}}&amp;port={{ente.pec.attiva.indirizzo.email.port.imaps}}&amp;consumer.initialDelay=10000&amp;sslContextParameters=#sslContextParameters"/>

            <log message="ENTI BRIDGE PEC ATTIVA INBOUND STARTED"/>

            <bean ref="pecAttivaManager" method="salvaFatturaDb"/>

            <choice>
                <when>
                    <simple>${in.header.emailDaIgnorare} == true</simple>

                    <log message="ENTI BRIDGE PEC ATTIVA INBOUND MAIL DA IGNORARE: mittente: ${in.header.Return-Path};"/>
                </when>
                <otherwise>

                    <inOnly uri="{{enti.bridge.fattura.attiva.inoltro}}"/>
                </otherwise>
            </choice>

        </route>

        <route id="enti.bridge.pec.attiva.inoltro.errori">

            <from uri="direct:enti.bridge.pec.attiva.inoltro.errori"/>

            <log message="FATTURA PEC INVIO NOTIFICA ERRORE"/>

            <bean ref="pecAttivaManager" method="prepareMailError"/>

            <setHeader headerName="to">
                <simple>${in.headers.Return-Path}</simple>
            </setHeader>
            <setHeader headerName="content-type">
                <constant>text/html</constant>
            </setHeader>

            <setHeader headerName="from">
                <simple>{{ente.pec.attiva.indirizzo.email.username.intero}}</simple>
            </setHeader>

            <!-- choice sul tipo di errore per usare il corretto velocity -->
            <choice>
                <when>
                    <simple>${in.header.tipoErrore} == 'enteNonTrovato'</simple>
                    <log message="FATTURA PEC INVIO NOTIFICA ERRORE: enteNonTrovato"/>

                    <setHeader headerName="subject">
                        <simple>{{ente.pec.attiva.subject.pec.error.ente.non.trovato}}: ${in.header.subjectOriginal}</simple>
                    </setHeader>

                    <to uri="velocity:velocity/mailEnteNonTrovatoErrorTemplate.vm"/>

                </when>

                <when>
                    <simple>${in.header.tipoErrore} == 'persistenceError'</simple>
                    <log message="FATTURA PEC INVIO NOTIFICA ERRORE: persistenceError"/>

                    <setHeader headerName="subject">
                        <simple>{{ente.pec.attiva.subject.pec.error.ente.persistence.error}}: ${in.header.subjectOriginal}</simple>
                    </setHeader>

                    <to uri="velocity:velocity/mailServizioNonDisponibileErrorTemplate.vm"/>

                </when>

                <when>
                    <simple>${in.header.tipoErrore} == 'allegatoNonTrovato'</simple>
                    <log message="FATTURA PEC INVIO NOTIFICA ERRORE: allegatoNonTrovato"/>

                    <setHeader headerName="subject">
                        <simple>{{ente.pec.attiva.subject.pec.error.allegato.non.trovato}}: ${in.header.subjectOriginal}</simple>
                    </setHeader>

                    <to uri="velocity:velocity/mailNoAllegatoErrorTemplate.vm"/>
                </when>

                <otherwise>

                    <log message="FATTURA PEC INVIO NOTIFICA ERRORE: errore generico"/>

                    <setHeader headerName="subject">
                        <simple>{{ente.pec.attiva.subject.pec.error.ente.generic.error}}: ${in.header.subjectOriginal}</simple>
                    </setHeader>

                    <to uri="velocity:velocity/mailServizioNonDisponibileErrorTemplate.vm"/>

                </otherwise>

            </choice>

            <log message="FATTURA PEC INVIO NOTIFICA ERRORE: INVIO EMAIL"/>

            <to uri="smtps://{{ente.pec.attiva.indirizzo.email.username.intero}}@{{ente.pec.indirizzo.email.host}}?password={{ente.pec.attiva.indirizzo.email.password}}&amp;username={{ente.pec.attiva.indirizzo.email.username}}&amp;port={{ente.pec.attiva.indirizzo.email.port.smtps}}&amp;headerFilterStrategy=#FatturaHeadersMailFilterStrategy"/>

            <to uri="log:it.extrasys.marche.regione.fatturapa.pec.invio errore?level=INFO&amp;showAll=true&amp;multiline=true"/>

            <log message="FATTURA PEC INVIATA NOTIFICA ERRORE: INVIO EMAIL"/>

        </route>


    </camelContext>


</blueprint>