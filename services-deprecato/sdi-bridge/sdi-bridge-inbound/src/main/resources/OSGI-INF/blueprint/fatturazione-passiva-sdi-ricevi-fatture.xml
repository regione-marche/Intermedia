<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0
                               http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">

    <bean id="sdiInboundRedeliveryPolicyConfig" class="org.apache.camel.processor.RedeliveryPolicy">
        <property name="maximumRedeliveries" value="${sdiInboundRedeliveryPolicyConfig.retry.attempts}"/>
        <property name="redeliveryDelay" value="${sdiInboundRedeliveryPolicyConfig.retry.delay}"/>
        <property name="useExponentialBackOff" value="${sdiInboundRedeliveryPolicyConfig.useExponentialBackOff}"/>
        <property name="backOffMultiplier" value="${sdiInboundRedeliveryPolicyConfig.backOffMultiplier}"/>
        <property name="retryAttemptedLogLevel" value="${sdiInboundRedeliveryPolicyConfig.retryAttemptedLogLevel}"/>
    </bean>

    <camelContext managementNamePattern="#symbolicName#-#counter#" useMDCLogging="true"
                  xmlns="http://camel.apache.org/schema/blueprint" id="sdi.bridge.inbound.ricevi.fatture"
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xsi:schemaLocation="http://camel.apache.org/schema/blueprint ">


        <dataFormats>
            <jaxb id="riceviFattureFormat" prettyPrint="true" contextPath="it.extrasys.marche.regione.fatturapa.contracts.sdi.ricevifatture.beans"/>
        </dataFormats>
        
        <onException redeliveryPolicyRef="sdiInboundRedeliveryPolicyConfig">
            <exception>java.lang.Exception</exception>

            <handled>
                <constant>true</constant>
            </handled>

            <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

            <log message="EXCEPTION MESSAGE=${exception.message} STACKTRACE=${exception.stacktrace}" loggingLevel="ERROR"/>
            <throwException ref="servizioNonDisponibileException"/>
        </onException>


        <route id="sdi.ricevi.fattura.inbound">

            <from uri="{{sdi.inbound.cxf.endpoint.ricevi.fatture}}"/>

            <to uri="log:it.extrasys.marche.regione.fatturapa.sdi.ricevi.fattura?level=DEBUG"/>
            
            <process ref="estraiMessaggioOriginaleProcessor" />
            <convertBodyTo type="java.lang.String"/>

            <log message="SDI INBOUND: RICEVUTO MESSAGGIO con - IDENTIFICATIVO SDI  ${in.header.identificativoSdI}"/>
            
            <choice>
                <when>
                    <simple>${header.tipoMessaggio} == 'FatturaElettronica'</simple>
                    <log message="SDI INBOUND: **** FATTURA ELETTRONICA - IDENTIFICATIVO SDI  ${in.header.identificativoSdI}"
                         loggingLevel="INFO"/>
                    <inOnly uri="{{sdi.inbound.salva.fatture.in.queue}}" id="salvafatture"/>
                    <removeHeaders pattern="*"/>
                    <process ref="creaRispostaRicezioneFatturaProcessor" id="rispostaProcessor"/>
                </when>
                
                <otherwise>
                    <log message="SDI INBOUND: **** NOTIFICA DECORRENZA TERMINI - IDENTIFICATIVO SDI  ${in.header.identificativoSdI}"
                         loggingLevel="INFO"/>
                    <inOnly uri="{{salva.notifica.decorrenza.termini.in.queue}}" id="salvaNotificaDecorrenza"/>
                    <removeHeaders pattern="*"/>
                    <setBody>
                        <simple>null</simple>
                    </setBody>

                </otherwise>
                
            </choice>

        </route>

    </camelContext>

</blueprint>