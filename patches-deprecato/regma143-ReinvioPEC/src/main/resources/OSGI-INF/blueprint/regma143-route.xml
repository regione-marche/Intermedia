<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0
                               http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
                               http://camel.apache.org/schema/blueprint
                               http://camel.apache.org/schema/blueprint/camel-blueprint-2.12.0.xsd">

    <camelContext trace="{{enable.trace}}" managementNamePattern="#symbolicName#-#counter#" useMDCLogging="true"
                  xmlns="http://camel.apache.org/schema/blueprint" id="regma.143.reinvia.pec"
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xsi:schemaLocation="http://camel.apache.org/schema/blueprint">

        <!-- define a producer template -->
        <template id="producer"/>
        <!-- define a consumer template -->
        <consumerTemplate id="consumer"/>

        <dataFormats>
            <json id="jack" library="Jackson"/>
        </dataFormats>

        <onException useOriginalMessage="true">
            <exception>java.lang.Exception</exception>
            <to uri="log:it.extrasys.marche.regione.fatturapa.regma143-ReinviaPEC?level=ERROR&amp;showAll=true&amp;multiline=true"/>
        </onException>

        <!-- Jetty -->
        <route id="regma.143.jetty.endpoint">
            <from uri="{{regma.143.jetty.endpoint}}"/>

            <log message="REGMA 143 --> JETTY START"/>

            <to uri="{{regma.143.main.route}}"/>
        </route>

        <!-- Batch -->
        <route id="regma.143.quartz.endpoint">
            <from uri="{{regma.143.quartz.endpoint}}"/>

            <log message="REGMA 143 --> BATCH START"/>

            <to uri="{{regma.143.main.route}}"/>
        </route>


        <!-- Main Route -->
        <route id="regma.143.main.route">
            <from uri="{{regma.143.main.route}}"/>

            <log message="REGMA 143 --> MAIN ROUTE START"/>

            <to uri="{{regma.143.call.broker}}"/>

            <choice>
                <when>
                    <simple>${header.queueSize} == null || ${header.queueSize} == 0</simple>

                    <log message="REGMA 143 coda VUOTA!!!"/>
                </when>
                <otherwise>

                    <setHeader headerName="subjFatturaMancConsegna">
                        <simple>{{regma.143.pec.subject.fattura.mancataConsegna.start}}</simple>
                    </setHeader>
                    <setHeader headerName="subjFatturaMancAccettazione">
                        <simple>{{regma.143.pec.subject.fattura.mancataAccettazione.start}}</simple>
                    </setHeader>
                    <setHeader headerName="subjDecTerminiMancConsegna">
                        <simple>{{regma.143.pec.subject.decTermini.mancataConsegna.start}}</simple>
                    </setHeader>
                    <setHeader headerName="subjDecTerminiMancAccettazione">
                        <simple>{{regma.143.pec.subject.decTermini.mancataAccettazione.start}}</simple>
                    </setHeader>
                    <setHeader headerName="subjEnd">
                        <simple>{{regma.143.pec.subject.end}}</simple>
                    </setHeader>


                    <bean ref="regma143ReinviaPEC" method="reinviaPEC" id="regma143BeanJava"/>


                    <when>
                        <simple>${header.elencoSDIFatture} != ''</simple>

                        <!-- Chiamata Jetty Fatture -->

                        <removeHeaders pattern="CamelHttp*" />

                        <setHeader headerName="CamelHttpMethod">
                            <constant>GET</constant>
                        </setHeader>

                        <setHeader headerName="listaIdentificativiSdI">
                            <simple>${header.elencoSDIFatture}</simple>
                        </setHeader>

                        <log message="REGMA 143 listaIdentificativiSdI = [${header.elencoSDIFatture}]" loggingLevel="INFO"/>

                        <log message="REGMA 143 chiamata a REGMA 122" loggingLevel="INFO"/>

                        <inOnly uri="{{regma.122.invia.fattura.da.database.rest.endpoint}}"/>

                    </when>

                    <when>
                        <simple>${header.elencoSDIDecTermini} != ''</simple>

                        <!-- Chiamata Jetty Dec Termini -->

                        <removeHeaders pattern="CamelHttp*" />

                        <setHeader headerName="CamelHttpMethod">
                            <constant>GET</constant>
                        </setHeader>

                        <setHeader headerName="listaIdentificativiSdI">
                            <simple>${header.elencoSDIDecTermini}</simple>
                        </setHeader>

                        <log message="REGMA 143 listaIdentificativiSdI = [${header.elencoSDIFatture}]" loggingLevel="INFO"/>

                        <log message="REGMA 143 chiamata a REGMA 122" loggingLevel="INFO"/>

                        <inOnly uri="{{regma.122.invia.decorrenza.termini.da.database.rest.endpoint}}"/>

                    </when>

                    <log message="REGMA 143 --> MAIN ROUTE END"/>

                </otherwise>
            </choice>

        </route>


        <route id="regma.143.call.broker">
            <from uri="{{regma.143.call.broker}}"/>

            <log message="REGMA 143 --> BROKER CALL START"/>

            <!-- aggiungo header http method per effettuare correttamente la chiamata al broker -->
            <setHeader headerName="CamelHttpMethod">
                <constant>GET</constant>
            </setHeader>

            <!-- chiamata al broker per trovare il size attuale della coda -->
            <!-- basic authentication -->
            <setHeader headerName="Authorization">
                <simple>{{regma.143.basic.authorization.macchina.code}}</simple>
            </setHeader>

            <setHeader headerName="queueName">
                <simple>{{regma.143.queue.name}}</simple>
            </setHeader>

            <log message="REGMA 143 ${header.queueName}"/>

            <setHeader headerName="urlBrokerSize">
                <simple>{{regma.143.broker.url.first.part}}${header.queueName}{{regma.143.broker.url.second.part}}</simple>
            </setHeader>

            <log message="REGMA 143 indirizzo Broker ${header.urlBrokerSize}"/>

            <!-- la url contiene delle virgole che e' il valore di default dell'attributo uriDelimiter. L'ho cambiato con un altro che invece non e' presente -->
            <routingSlip uriDelimiter="#" id="regma143UrlBrokerSize">
                <header>urlBrokerSize</header>
            </routingSlip>

            <unmarshal ref="jack"/>

            <setHeader headerName="queueSize">
                <simple>${body[value]}</simple>
            </setHeader>

            <log message="REGMA 143 coda ${header.QueueName} *** SIZE [${header.queueSize}] ***"/>

        </route>

    </camelContext>

</blueprint>