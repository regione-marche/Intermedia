<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0
                               http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">

    <routeContext id="enti.bridge.ftp.ca.fattura.invio.report.st.ctx" xmlns="http://camel.apache.org/schema/blueprint">

        <route id="enti.bridge.ftp.ca.fattura.invio.report.st">
            <from uri="direct:batch-report-st-ftp"/>

            <log message="BATCH FTP CA - INVIO REPORT ST STARTED\n"/>

            <setHeader headerName="tipoInvio">
                <constant>INVIO_SINGOLO</constant>
            </setHeader>

            <setHeader headerName="tipoFile">
                <constant>REPORT_ST</constant>
            </setHeader>

            <setHeader headerName="dirReportSt">
                <simple>{{fatturapa.dir.report.st.invio}}</simple>
            </setHeader>

            <choice>
                <when>
                    <simple>${headers.startReportStFtpFromJetty} == true</simple>

                    <!-- Se viene dal jetty viene inviato anche un codice ente allora ricerco solo l'ente in questione altrimenti tutti -->
                    <choice>
                        <when>
                            <simple>${headers.codiceEnte} != null and ${headers.codiceEnte} != ''</simple>
                            <bean ref="gestioneEntiManager" method="getEnteByCodiceUfficioFtpReportSt"/>
                        </when>
                        <otherwise>
                            <!-- Recupero tutti gli enti che usano ftp -->
                            <bean ref="gestioneEntiManager" method="recuperaEntiInvioSingolo"/>
                        </otherwise>

                    </choice>

                </when>
                <otherwise>

                    <process ref="deleteReportSTProcessor"/>

                    <!-- Recupero tutti gli enti che usano ftp -->
                    <bean ref="gestioneEntiManager" method="recuperaEntiInvioSingolo"/>
                </otherwise>
            </choice>

            <split>
                <simple>${body}</simple>

                <to uri="direct:setta-headers-ftp-report-st"/>

                <setHeader headerName="ambienteReportST">
                    <simple>{{fatturapa.ftp.report.st.ambiente}}</simple>
                </setHeader>

                <setHeader headerName="extFileReportSt">
                    <simple>{{fatturapa.ftp.report.st.ext.file}}</simple>
                </setHeader>

                <!-- Query Report per FO -->
                <bean ref="ftpReportStManager" method="getRecordForReportStFO"/>

                <choice>
                    <when>
                        <simple>${body.size} > 0</simple>

                        <log message="BATCH FTP CA - INVIO REPORT ST [FO] START: Trovati per l'ente ${headers.ente} [${body.size} records]"/>

                        <setHeader headerName="tipoReportST">
                            <constant>FO</constant>
                        </setHeader>

                        <setHeader headerName="headerReportST">
                            <simple>{{fatturapa.ftp.report.st.fo.header.csv}}</simple>
                        </setHeader>

                        <setHeader headerName="pathTmpFileCsv">
                            <simple>{{fatturapa.ftp.report.st.pathTmpFileCsv}}</simple>
                        </setHeader>

                        <!-- Creazione Report ST CSV FO -->
                        <process ref="createReportSTProcessor"/>

                        <setHeader headerName="nomeFileReportSt">
                            <simple>${body}</simple>
                        </setHeader>

                        <convertBodyTo type="java.lang.String"/>
                        <inOnly uri="{{ftp.report.st.fo.invio.queue}}" />

                    </when>
                    <otherwise>
                        <log message="BATCH FTP CA - INVIO REPORT ST [FO] FINISHED: Nessun record trovato per l'ente ${headers.ente}"/>
                    </otherwise>
                </choice>

                <!-- Query Report per FI -->
                <bean ref="ftpReportStManager" method="getRecordForReportStFI"/>

                <choice>
                    <when>
                        <simple>${body.size} > 0</simple>

                        <log message="BATCH FTP CA - INVIO REPORT ST [FI] START: Trovati per l'ente ${headers.ente} [${body.size} records]"/>

                        <setHeader headerName="tipoReportST">
                            <constant>FI</constant>
                        </setHeader>

                        <setHeader headerName="headerReportST">
                            <simple>{{fatturapa.ftp.report.st.fi.header.csv}}</simple>
                        </setHeader>

                        <setHeader headerName="pathTmpFileCsv">
                            <simple>{{fatturapa.ftp.report.st.pathTmpFileCsv}}</simple>
                        </setHeader>

                        <!-- Creazione Report ST CSV FI -->
                        <process ref="createReportSTProcessor"/>

                        <setHeader headerName="nomeFileReportSt">
                            <simple>${body}</simple>
                        </setHeader>

                        <convertBodyTo type="java.lang.String"/>
                        <inOnly uri="{{ftp.report.st.fi.invio.queue}}" />

                    </when>
                    <otherwise>
                        <log message="BATCH FTP CA - INVIO REPORT ST [FI] FINISHED: Nessun record trovato per l'ente ${headers.ente}"/>
                    </otherwise>
                </choice>

            </split>

            <log message="BATCH FTP CA - INVIO REPORT ST FINISHED\n"/>
        </route>

        <route id="enti.bridge.ftp.ca.fattura.invio.report.st.fo.send">
            <from uri="{{ftp.report.st.fo.invio.queue}}"/>

            <doTry>

                <setHeader headerName="pathReadFileFO">
                    <simple>file://${headers.dirReportSt}/FO?fileName=${headers.nomeFileReportSt}&amp;noop=true</simple>
                </setHeader>

                <pollEnrich strategyRef="aggregatePollEnrichHeaders">
                    <simple>${headers.pathReadFileFO}</simple>
                </pollEnrich>

                <toD id="reportStFOInvio" uri="${headers.urlFtp}/${headers.path}/{{fatturapa.ftp.dir.out}}?username=${headers.username}&amp;password=${headers.password}&amp;passiveMode=true&amp;tempFileName=${file:name.noext}.TEMP&amp;binary=true"/>

                <doCatch>
                    <exception>java.lang.Exception</exception>
                    <inOnly uri="{{DLQ.ftp.report.st.fo.invio}}" />
                </doCatch>
            </doTry>

        </route>

        <route id="enti.bridge.ftp.ca.fattura.invio.report.st.fi.send">
            <from uri="{{ftp.report.st.fi.invio.queue}}"/>

            <doTry>

                <setHeader headerName="pathReadFileFI">
                    <simple>file://${headers.dirReportSt}/FI?fileName=${headers.nomeFileReportSt}&amp;noop=true</simple>
                </setHeader>

                <pollEnrich strategyRef="aggregatePollEnrichHeaders">
                    <simple>${headers.pathReadFileFI}</simple>
                </pollEnrich>

                <toD id="reportStFIInvio" uri="${headers.urlFtp}/${headers.path}/{{fatturapa.ftp.dir.out}}?username=${headers.username}&amp;password=${headers.password}&amp;passiveMode=true&amp;tempFileName=${file:name.noext}.TEMP&amp;binary=true"/>

                <doCatch>
                    <exception>java.lang.Exception</exception>
                    <inOnly uri="{{DLQ.ftp.report.st.fi.invio}}" />
                </doCatch>
            </doTry>

        </route>

        <route id="enti.bridge.ftp.ca.fattura.batch.setta.headers.ftp.report.st">
            <from uri="direct:setta-headers-ftp-report-st"/>

            <setHeader headerName="ente">
                <simple>${body.codiceUfficio}</simple>
            </setHeader>

            <choice>
                <when>
                    <simple>${headers.tipoInvio} == 'INVIO_SINGOLO'</simple>

                    <setHeader headerName="urlFtp">
                        <simple>${body.endpointProtocolloCa.endpoint}</simple>
                    </setHeader>

                    <setHeader headerName="path">
                        <simple>${body.endpointProtocolloCa.path}</simple>
                    </setHeader>

                    <setHeader headerName="username">
                        <simple>${body.endpointProtocolloCa.username}</simple>
                    </setHeader>

                    <setHeader headerName="passwordEncrypted">
                        <simple>${body.endpointProtocolloCa.password}</simple>
                    </setHeader>

                    <!--Decripta la password-->
                    <process ref="decryptPasswordProcessor"/>
                </when>
            </choice>
        </route>
    </routeContext>
</blueprint>