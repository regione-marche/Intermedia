<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0
                               http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">

    <camelContext xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" managementNamePattern="#symbolicName#-#counter#"
                  useMDCLogging="true" xmlns="http://camel.apache.org/schema/blueprint"
                  id="ws.enti.bridge.inbound.ca.fatturazione.attiva.ricevi.fatture"
                  xsi:schemaLocation="http://camel.apache.org/schema/blueprint ">

        <onException useOriginalMessage="true">
            <exception>it.extrasys.marche.regione.fatturapa.contracts.inoltro.fatturazione.attiva.ca.beans.RispostaRiceviFileCAMsgFault</exception>

            <handled>
                <constant>false</constant>
            </handled>

            <!-- Serve solo a far 'galleggiare' il SoapFault-->
            <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

        </onException>

        <onException useOriginalMessage="true">
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPACredenzialiNonValideException</exception>

            <handled>
                <constant>true</constant>
            </handled>

            <log message="FatturaPACredenzialiNonValideException EXCEPTION MESSAGE=${exception.message} STACKTRACE=${exception.stacktrace}" loggingLevel="ERROR"/>

            <setHeader headerName="esitoRisposta">
                <constant>FA01</constant>
            </setHeader>

            <setBody>
                <simple>CREDENZIALI NON VALIDE</simple>
            </setBody>

            <process ref="creaRispostaRicezioneFatturaAttivaProcessor"/>
            <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

        </onException>

        <onException useOriginalMessage="true">
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPAValidazioneFallitaException</exception>

            <handled>
                <constant>true</constant>
            </handled>

            <log message="FatturaPAValidazioneFallitaException EXCEPTION MESSAGE=${exception.message} STACKTRACE=${exception.stacktrace}" loggingLevel="ERROR"/>

            <setHeader headerName="esitoRisposta">
                <constant>FA02</constant>
            </setHeader>

            <setBody>
                <simple>FILE FATTURA RIFIUTATO: ERRORE VALIDAZIONE FATTURA</simple>
            </setBody>

            <process ref="creaRispostaRicezioneFatturaAttivaProcessor"/>
            <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

        </onException>

        <onException useOriginalMessage="true">
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPAEnteNonTrovatoException</exception>

            <handled>
                <constant>true</constant>
            </handled>

            <log message="FatturaPAEnteNonTrovatoException EXCEPTION MESSAGE=${exception.message} STACKTRACE=${exception.stacktrace}" loggingLevel="ERROR"/>

            <setHeader headerName="esitoRisposta">
                <constant>FA03</constant>
            </setHeader>

            <setBody>
                <simple>ENTE NON ABILITATO A INTERMEDIAMARCHE</simple>
            </setBody>

            <process ref="creaRispostaRicezioneFatturaAttivaProcessor"/>
            <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

        </onException>

        <onException useOriginalMessage="true">
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPANomeFileErratoException</exception>

            <handled>
                <constant>true</constant>
            </handled>

            <log message="FatturaPANomeFileErratoException EXCEPTION MESSAGE=${exception.message} STACKTRACE=${exception.stacktrace}" loggingLevel="ERROR"/>

            <setHeader headerName="esitoRisposta">
                <constant>FA04</constant>
            </setHeader>

            <setBody>
                <simple>NOME FILE FATTURA NON VALIDO</simple>
            </setBody>

            <process ref="creaRispostaRicezioneFatturaAttivaProcessor"/>
            <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

        </onException>

        <onException useOriginalMessage="true">
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPAAllegatoAttivaNonTrovatoException</exception>

            <handled>
                <constant>true</constant>
            </handled>

            <log message="FatturaPAAllegatoAttivaNonTrovatoException EXCEPTION MESSAGE=${exception.message} STACKTRACE=${exception.stacktrace}" loggingLevel="ERROR"/>

            <setHeader headerName="esitoRisposta">
                <constant>FA05</constant>
            </setHeader>

            <setBody>
                <simple>ALLEGATO NON TROVATO</simple>
            </setBody>

            <process ref="creaRispostaRicezioneFatturaAttivaProcessor"/>
            <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

        </onException>

        <onException useOriginalMessage="true">
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPAMaxSizeException</exception>

            <handled>
                <constant>true</constant>
            </handled>

            <log message="FatturaPAMaxSizeException EXCEPTION MESSAGE=${exception.message} STACKTRACE=${exception.stacktrace}" loggingLevel="ERROR"/>

            <setHeader headerName="esitoRisposta">
                <constant>FA02</constant>
            </setHeader>

            <setBody>
                <simple>FILE FATTURA RIFIUTATO: DIMENSIONE MASSIMA FATTURA ({{enti.bridge.ws.ca.fatturazione.attiva.max.size}} {{enti.bridge.ws.ca.fatturazione.attiva.size.unit}}) SUPERATA</simple>
            </setBody>

            <process ref="creaRispostaRicezioneFatturaAttivaProcessor"/>
            <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

        </onException>

        <onException useOriginalMessage="true">
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPACampiObbligatoriNonValorizzatiException</exception>

            <handled>
                <constant>true</constant>
            </handled>

            <log message="FatturaPACampiObbligatoriNonValorizzatiException EXCEPTION MESSAGE=${exception.message} STACKTRACE=${exception.stacktrace}" loggingLevel="ERROR"/>

            <setHeader headerName="esitoRisposta">
                <constant>FA06</constant>
            </setHeader>

            <setBody>
                <simple>MESSAGGIO RIFIUTATO: CAMPI OBBLIGATORI NON VALORIZZATI</simple>
            </setBody>

            <process ref="creaRispostaRicezioneFatturaAttivaProcessor"/>
            <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

        </onException>

        <onException useOriginalMessage="true" redeliveryPolicyRef="wsAttivaInvioFatturaRedeliveryPolicyConfig">
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPaPersistenceException</exception>

            <handled>
                <constant>true</constant>
            </handled>

            <log message="FatturaPaPersistenceException EXCEPTION MESSAGE=${exception.message} STACKTRACE=${exception.stacktrace}" loggingLevel="ERROR"/>

            <setHeader headerName="esitoRisposta">
                <constant>FA99</constant>
            </setHeader>

            <setBody>
                <simple>ERRORE GENERICO</simple>
            </setBody>

            <process ref="creaRispostaRicezioneFatturaAttivaProcessor"/>
            <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

        </onException>

        <onException useOriginalMessage="true">
            <exception>it.extrasys.marche.regione.fatturapa.core.exceptions.FatturaPAException</exception>

            <handled>
                <constant>true</constant>
            </handled>

            <log message="FatturaPaException EXCEPTION MESSAGE=${exception.message} STACKTRACE=${exception.stacktrace}" loggingLevel="ERROR"/>

            <setHeader headerName="esitoRisposta">
                <constant>FA99</constant>
            </setHeader>

            <setBody>
                <simple>ERRORE GENERICO</simple>
            </setBody>

            <process ref="creaRispostaRicezioneFatturaAttivaProcessor"/>
            <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

        </onException>

        <onException useOriginalMessage="true" redeliveryPolicyRef="wsAttivaInvioFatturaRedeliveryPolicyConfig">
            <exception>java.lang.Exception</exception>

            <handled>
                <constant>true</constant>
            </handled>

            <log message="Generic Exception EXCEPTION MESSAGE=${exception.message} STACKTRACE=${exception.stacktrace}" loggingLevel="ERROR"/>

            <setHeader headerName="esitoRisposta">
                <constant>FA99</constant>
            </setHeader>

            <setBody>
                <simple>ERRORE GENERICO</simple>
            </setBody>

            <process ref="creaRispostaRicezioneFatturaAttivaProcessor"/>
            <!--Mette in coda lo stacktrace-->
            <setHeader headerName="exception">
                <simple>${exception.stacktrace}</simple>
            </setHeader>

            <wireTap uri="{{gestione.stacktrace.in.queue}}"/>

        </onException>

        <route id="enti.bridge.inbound.fatturazione.attiva.ricevi.fatture">
            <from uri="{{enti.inbound.ca.cxf.endpoint.fatturazione.attiva.inoltra.fatture}}"/>

            <log message="************** WS CANALE AVANZATO FATTURA ATTIVA STARTED **************"/>

            <log message="${body}" loggingLevel="DEBUG"/>

            <setHeader headerName="canaleAvanzato">
                <constant>true</constant>
            </setHeader>

            <bean ref="fatturazioneAttivaRiceviManager" method="salvaFattura"/>

            <choice>
                <when>
                    <simple>${headers.reqCampiEX} == 'true'</simple>

                    <log message="ERRORE RICHIESTA: Campi obbligatori non valorizzati" loggingLevel="ERROR"/>
                    <throwException ref="fatturaPACampiObbligatoriNonValorizzatiException" />
                </when>
                <when>
                    <simple>${headers.reqNomeFileEX} == 'true'</simple>

                    <log message="ERRORE RICHIESTA: Nome file non valido" loggingLevel="ERROR"/>
                    <throwException ref="fatturaPANomeFileErratoException" />
                </when>
                <when>
                    <simple>${headers.reqFileEX} == 'true'</simple>

                    <log message="ERRORE RICHIESTA: Allegato non trovato" loggingLevel="ERROR"/>
                    <throwException ref="fatturaPAAllegatoAttivaNonTrovatoException" />
                </when>
                <when>
                    <simple>${headers.enteEX} == 'true'</simple>

                    <log message="ERRORE CHECK ENTE: Ente non trovato o non autorizzato a IntermediaMarche" loggingLevel="ERROR"/>
                    <throwException ref="fatturaPAEnteNonTrovatoException" />
                </when>
                <when>
                    <simple>${headers.enteCredenzialiEX} == 'true'</simple>

                    <log message="ERRORE CHECK ENTE: Ente credenziali non valide" loggingLevel="ERROR"/>
                    <throwException ref="fatturaPACredenzialiNonValideException" />
                </when>
                <otherwise>

                    <removeHeader headerName="operationName"/>
                    <removeHeader headerName="operationNamespace"/>

                    <enrich strategyRef="fatturaAttivaValidationAggregationStrategy">
                        <simple>{{enti.bridge.inbound.ca.fatturazione.attiva.ricevi.fatture.validation.enricher}}</simple>
                    </enrich>

                    <choice>
                        <when>
                            <simple>${headers.validation} == 'OK'</simple>

                            <log message="FATTURA ATTIVA CA VALIDAZIONE OK"/>

                            <setHeader headerName="esitoRisposta">
                                <constant>FA00</constant>
                            </setHeader>

                            <inOnly uri="{{enti.bridge.fattura.attiva.inoltro}}"/>

                            <process ref="creaRispostaRicezioneFatturaAttivaProcessor"/>
                        </when>
                        <otherwise>
                            <!-- validazione errata -->
                            <log message="FATTURA ATTIVA CA VALIDAZIONE KO"/>

                            <setHeader headerName="esitoRisposta">
                                <constant>FA02</constant>
                            </setHeader>

                            <process ref="creaRispostaRicezioneFatturaAttivaProcessor"/>
                        </otherwise>
                    </choice>

                </otherwise>
            </choice>

            <log message="************** WS CANALE AVANZATO FATTURA ATTIVA END **************"/>
        </route>

        <!-- ENRICHER -->
        <route id="enti.bridge.inbound.fatturazione.attiva.ricevi.fatture.validation.enricher">
            <from uri="{{enti.bridge.inbound.ca.fatturazione.attiva.ricevi.fatture.validation.enricher}}"/>

            <!-- nel body ho la fattura che devo validare. Devo estrarre l'eventuale firma e dunque validare il contenuto -->

            <doTry>

                <bean ref="fatturazioneAttivaRiceviManager" method="preparaFatturaPerValidazione"/>

                <to uri="validator:it/extrasys/marche/regione/fatturapa/contracts/fatturazione/elettronica/xsd/FatturazioneElettronica.xsd"/>

                <setHeader headerName="validation">
                    <constant>OK</constant>
                </setHeader>

                <doCatch>
                    <exception>org.apache.camel.ValidationException</exception>
                    <exception>org.xml.sax.SAXParseException</exception>

                    <handled>
                        <constant>true</constant>
                    </handled>

                    <setHeader headerName="validation">
                        <constant>KO</constant>
                    </setHeader>

                    <to uri="log:it.extrasys.marche.regione.fatturapa.tracing.persistence?level=ERROR&amp;showAll=true&amp;multiline=true"/>
                </doCatch>
            </doTry>
        </route>

    </camelContext>

</blueprint>